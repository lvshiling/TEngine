// Generated by sprotodump. DO NOT EDIT!
// source: ..\..\Protos\GameProto\Protos\\s2c-slim.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace ServerSprotoType { 
	public class activity_info : SprotoTypeBase {
		private static int max_field_count = 15;
		
		
		private Int64 _guid; // tag 0
		public Int64 guid {
			get { return _guid; }
			set { base.has_field.set_field (0, true); _guid = value; }
		}
		public bool HasGuid {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _style; // tag 1
		public Int64 style {
			get { return _style; }
			set { base.has_field.set_field (1, true); _style = value; }
		}
		public bool HasStyle {
			get { return base.has_field.has_field (1); }
		}

		private string _main_title; // tag 3
		public string main_title {
			get { return _main_title; }
			set { base.has_field.set_field (2, true); _main_title = value; }
		}
		public bool HasMain_title {
			get { return base.has_field.has_field (2); }
		}

		private string _sub_title; // tag 4
		public string sub_title {
			get { return _sub_title; }
			set { base.has_field.set_field (3, true); _sub_title = value; }
		}
		public bool HasSub_title {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _tag; // tag 5
		public Int64 tag {
			get { return _tag; }
			set { base.has_field.set_field (4, true); _tag = value; }
		}
		public bool HasTag {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _highlight; // tag 6
		public Int64 highlight {
			get { return _highlight; }
			set { base.has_field.set_field (5, true); _highlight = value; }
		}
		public bool HasHighlight {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _order; // tag 7
		public Int64 order {
			get { return _order; }
			set { base.has_field.set_field (6, true); _order = value; }
		}
		public bool HasOrder {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _start_time; // tag 8
		public Int64 start_time {
			get { return _start_time; }
			set { base.has_field.set_field (7, true); _start_time = value; }
		}
		public bool HasStart_time {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _end_time; // tag 9
		public Int64 end_time {
			get { return _end_time; }
			set { base.has_field.set_field (8, true); _end_time = value; }
		}
		public bool HasEnd_time {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _create_time; // tag 10
		public Int64 create_time {
			get { return _create_time; }
			set { base.has_field.set_field (9, true); _create_time = value; }
		}
		public bool HasCreate_time {
			get { return base.has_field.has_field (9); }
		}

		private string _target_url; // tag 11
		public string target_url {
			get { return _target_url; }
			set { base.has_field.set_field (10, true); _target_url = value; }
		}
		public bool HasTarget_url {
			get { return base.has_field.has_field (10); }
		}

		private string _image_src; // tag 12
		public string image_src {
			get { return _image_src; }
			set { base.has_field.set_field (11, true); _image_src = value; }
		}
		public bool HasImage_src {
			get { return base.has_field.has_field (11); }
		}

		private string _content; // tag 13
		public string content {
			get { return _content; }
			set { base.has_field.set_field (12, true); _content = value; }
		}
		public bool HasContent {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _readever; // tag 14
		public Int64 readever {
			get { return _readever; }
			set { base.has_field.set_field (13, true); _readever = value; }
		}
		public bool HasReadever {
			get { return base.has_field.has_field (13); }
		}

		public activity_info () : base(max_field_count) {}

		public activity_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.guid = base.deserialize.read_integer ();
					break;
				case 1:
					this.style = base.deserialize.read_integer ();
					break;
				case 3:
					this.main_title = base.deserialize.read_string ();
					break;
				case 4:
					this.sub_title = base.deserialize.read_string ();
					break;
				case 5:
					this.tag = base.deserialize.read_integer ();
					break;
				case 6:
					this.highlight = base.deserialize.read_integer ();
					break;
				case 7:
					this.order = base.deserialize.read_integer ();
					break;
				case 8:
					this.start_time = base.deserialize.read_integer ();
					break;
				case 9:
					this.end_time = base.deserialize.read_integer ();
					break;
				case 10:
					this.create_time = base.deserialize.read_integer ();
					break;
				case 11:
					this.target_url = base.deserialize.read_string ();
					break;
				case 12:
					this.image_src = base.deserialize.read_string ();
					break;
				case 13:
					this.content = base.deserialize.read_string ();
					break;
				case 14:
					this.readever = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.guid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.style, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.main_title, 3);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.sub_title, 4);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.tag, 5);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.highlight, 6);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.order, 7);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.start_time, 8);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.end_time, 9);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.create_time, 10);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_string (this.target_url, 11);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_string (this.image_src, 12);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_string (this.content, 13);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.readever, 14);
			}

			return base.serialize.close ();
		}
	}


	public class banner_item : SprotoTypeBase {
		private static int max_field_count = 8;
		
		
		private Int64 _push_type; // tag 0
		public Int64 push_type {
			get { return _push_type; }
			set { base.has_field.set_field (0, true); _push_type = value; }
		}
		public bool HasPush_type {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _id; // tag 1
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (1, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _sort; // tag 2
		public Int64 sort {
			get { return _sort; }
			set { base.has_field.set_field (2, true); _sort = value; }
		}
		public bool HasSort {
			get { return base.has_field.has_field (2); }
		}

		private string _banner_url; // tag 3
		public string banner_url {
			get { return _banner_url; }
			set { base.has_field.set_field (3, true); _banner_url = value; }
		}
		public bool HasBanner_url {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _biz_id; // tag 4
		public Int64 biz_id {
			get { return _biz_id; }
			set { base.has_field.set_field (4, true); _biz_id = value; }
		}
		public bool HasBiz_id {
			get { return base.has_field.has_field (4); }
		}

		private string _name; // tag 5
		public string name {
			get { return _name; }
			set { base.has_field.set_field (5, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (5); }
		}

		private string _jump; // tag 6
		public string jump {
			get { return _jump; }
			set { base.has_field.set_field (6, true); _jump = value; }
		}
		public bool HasJump {
			get { return base.has_field.has_field (6); }
		}

		private string _desc; // tag 7
		public string desc {
			get { return _desc; }
			set { base.has_field.set_field (7, true); _desc = value; }
		}
		public bool HasDesc {
			get { return base.has_field.has_field (7); }
		}

		public banner_item () : base(max_field_count) {}

		public banner_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.push_type = base.deserialize.read_integer ();
					break;
				case 1:
					this.id = base.deserialize.read_integer ();
					break;
				case 2:
					this.sort = base.deserialize.read_integer ();
					break;
				case 3:
					this.banner_url = base.deserialize.read_string ();
					break;
				case 4:
					this.biz_id = base.deserialize.read_integer ();
					break;
				case 5:
					this.name = base.deserialize.read_string ();
					break;
				case 6:
					this.jump = base.deserialize.read_string ();
					break;
				case 7:
					this.desc = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.push_type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.sort, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.banner_url, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.biz_id, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.name, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.jump, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_string (this.desc, 7);
			}

			return base.serialize.close ();
		}
	}


	public class battery_skill : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _time; // tag 1
		public Int64 time {
			get { return _time; }
			set { base.has_field.set_field (1, true); _time = value; }
		}
		public bool HasTime {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _factor; // tag 2
		public Int64 factor {
			get { return _factor; }
			set { base.has_field.set_field (2, true); _factor = value; }
		}
		public bool HasFactor {
			get { return base.has_field.has_field (2); }
		}

		public battery_skill () : base(max_field_count) {}

		public battery_skill (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.time = base.deserialize.read_integer ();
					break;
				case 2:
					this.factor = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.time, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.factor, 2);
			}

			return base.serialize.close ();
		}
	}


	public class broadcast_tips : SprotoTypeBase {
		private static int max_field_count = 9;
		
		
		private Int64 _fishid; // tag 0
		public Int64 fishid {
			get { return _fishid; }
			set { base.has_field.set_field (0, true); _fishid = value; }
		}
		public bool HasFishid {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _vip; // tag 1
		public Int64 vip {
			get { return _vip; }
			set { base.has_field.set_field (1, true); _vip = value; }
		}
		public bool HasVip {
			get { return base.has_field.has_field (1); }
		}

		private string _nickname; // tag 2
		public string nickname {
			get { return _nickname; }
			set { base.has_field.set_field (2, true); _nickname = value; }
		}
		public bool HasNickname {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _gold; // tag 3
		public Int64 gold {
			get { return _gold; }
			set { base.has_field.set_field (3, true); _gold = value; }
		}
		public bool HasGold {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _itemid; // tag 4
		public Int64 itemid {
			get { return _itemid; }
			set { base.has_field.set_field (4, true); _itemid = value; }
		}
		public bool HasItemid {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _quantity; // tag 5
		public Int64 quantity {
			get { return _quantity; }
			set { base.has_field.set_field (5, true); _quantity = value; }
		}
		public bool HasQuantity {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _silo_factor; // tag 6
		public Int64 silo_factor {
			get { return _silo_factor; }
			set { base.has_field.set_field (6, true); _silo_factor = value; }
		}
		public bool HasSilo_factor {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _gold_factor; // tag 7
		public Int64 gold_factor {
			get { return _gold_factor; }
			set { base.has_field.set_field (7, true); _gold_factor = value; }
		}
		public bool HasGold_factor {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _energy; // tag 8
		public Int64 energy {
			get { return _energy; }
			set { base.has_field.set_field (8, true); _energy = value; }
		}
		public bool HasEnergy {
			get { return base.has_field.has_field (8); }
		}

		public broadcast_tips () : base(max_field_count) {}

		public broadcast_tips (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.fishid = base.deserialize.read_integer ();
					break;
				case 1:
					this.vip = base.deserialize.read_integer ();
					break;
				case 2:
					this.nickname = base.deserialize.read_string ();
					break;
				case 3:
					this.gold = base.deserialize.read_integer ();
					break;
				case 4:
					this.itemid = base.deserialize.read_integer ();
					break;
				case 5:
					this.quantity = base.deserialize.read_integer ();
					break;
				case 6:
					this.silo_factor = base.deserialize.read_integer ();
					break;
				case 7:
					this.gold_factor = base.deserialize.read_integer ();
					break;
				case 8:
					this.energy = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.fishid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.vip, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.nickname, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.gold, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.itemid, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.quantity, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.silo_factor, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.gold_factor, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.energy, 8);
			}

			return base.serialize.close ();
		}
	}


	public class change_cannon {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _cannon_id; // tag 0
			public Int64 cannon_id {
				get { return _cannon_id; }
				set { base.has_field.set_field (0, true); _cannon_id = value; }
			}
			public bool HasCannon_id {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _time; // tag 1
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (1, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.cannon_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.cannon_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.time, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class change_table_status {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _table_status; // tag 0
			public Int64 table_status {
				get { return _table_status; }
				set { base.has_field.set_field (0, true); _table_status = value; }
			}
			public bool HasTable_status {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _multiple_max; // tag 1
			public Int64 multiple_max {
				get { return _multiple_max; }
				set { base.has_field.set_field (1, true); _multiple_max = value; }
			}
			public bool HasMultiple_max {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _multiple_locked; // tag 2
			public Int64 multiple_locked {
				get { return _multiple_locked; }
				set { base.has_field.set_field (2, true); _multiple_locked = value; }
			}
			public bool HasMultiple_locked {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _lucky_score_switch; // tag 3
			public Int64 lucky_score_switch {
				get { return _lucky_score_switch; }
				set { base.has_field.set_field (3, true); _lucky_score_switch = value; }
			}
			public bool HasLucky_score_switch {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.table_status = base.deserialize.read_integer ();
						break;
					case 1:
						this.multiple_max = base.deserialize.read_integer ();
						break;
					case 2:
						this.multiple_locked = base.deserialize.read_integer ();
						break;
					case 3:
						this.lucky_score_switch = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.table_status, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.multiple_max, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.multiple_locked, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.lucky_score_switch, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class conch_common_item : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _push_type; // tag 0
		public Int64 push_type {
			get { return _push_type; }
			set { base.has_field.set_field (0, true); _push_type = value; }
		}
		public bool HasPush_type {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _auto_add_jackpot; // tag 1
		public Int64 auto_add_jackpot {
			get { return _auto_add_jackpot; }
			set { base.has_field.set_field (1, true); _auto_add_jackpot = value; }
		}
		public bool HasAuto_add_jackpot {
			get { return base.has_field.has_field (1); }
		}

		private string _conch_guid_title; // tag 2
		public string conch_guid_title {
			get { return _conch_guid_title; }
			set { base.has_field.set_field (2, true); _conch_guid_title = value; }
		}
		public bool HasConch_guid_title {
			get { return base.has_field.has_field (2); }
		}

		public conch_common_item () : base(max_field_count) {}

		public conch_common_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.push_type = base.deserialize.read_integer ();
					break;
				case 1:
					this.auto_add_jackpot = base.deserialize.read_integer ();
					break;
				case 2:
					this.conch_guid_title = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.push_type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.auto_add_jackpot, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.conch_guid_title, 2);
			}

			return base.serialize.close ();
		}
	}


	public class conch_guide : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private string _title; // tag 0
		public string title {
			get { return _title; }
			set { base.has_field.set_field (0, true); _title = value; }
		}
		public bool HasTitle {
			get { return base.has_field.has_field (0); }
		}

		private List<banner_item> _guide_records; // tag 1
		public List<banner_item> guide_records {
			get { return _guide_records; }
			set { base.has_field.set_field (1, true); _guide_records = value; }
		}
		public bool HasGuide_records {
			get { return base.has_field.has_field (1); }
		}

		public conch_guide () : base(max_field_count) {}

		public conch_guide (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.title = base.deserialize.read_string ();
					break;
				case 1:
					this.guide_records = base.deserialize.read_obj_list<banner_item> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.title, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_obj (this.guide_records, 1);
			}

			return base.serialize.close ();
		}
	}


	public class cond : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _quantity; // tag 1
		public Int64 quantity {
			get { return _quantity; }
			set { base.has_field.set_field (1, true); _quantity = value; }
		}
		public bool HasQuantity {
			get { return base.has_field.has_field (1); }
		}

		private List<Int64> _para; // tag 2
		public List<Int64> para {
			get { return _para; }
			set { base.has_field.set_field (2, true); _para = value; }
		}
		public bool HasPara {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _para_range; // tag 3
		public Int64 para_range {
			get { return _para_range; }
			set { base.has_field.set_field (3, true); _para_range = value; }
		}
		public bool HasPara_range {
			get { return base.has_field.has_field (3); }
		}

		public cond () : base(max_field_count) {}

		public cond (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.quantity = base.deserialize.read_integer ();
					break;
				case 2:
					this.para = base.deserialize.read_integer_list ();
					break;
				case 3:
					this.para_range = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.quantity, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.para, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.para_range, 3);
			}

			return base.serialize.close ();
		}
	}


	public class corner_mark_item : SprotoTypeBase {
		private static int max_field_count = 5;
		
		
		private Int64 _push_type; // tag 0
		public Int64 push_type {
			get { return _push_type; }
			set { base.has_field.set_field (0, true); _push_type = value; }
		}
		public bool HasPush_type {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _id; // tag 1
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (1, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (1); }
		}

		private string _corner_mark_name; // tag 2
		public string corner_mark_name {
			get { return _corner_mark_name; }
			set { base.has_field.set_field (2, true); _corner_mark_name = value; }
		}
		public bool HasCorner_mark_name {
			get { return base.has_field.has_field (2); }
		}

		private string _corner_mark_name_colour; // tag 3
		public string corner_mark_name_colour {
			get { return _corner_mark_name_colour; }
			set { base.has_field.set_field (3, true); _corner_mark_name_colour = value; }
		}
		public bool HasCorner_mark_name_colour {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _biz_id; // tag 4
		public Int64 biz_id {
			get { return _biz_id; }
			set { base.has_field.set_field (4, true); _biz_id = value; }
		}
		public bool HasBiz_id {
			get { return base.has_field.has_field (4); }
		}

		public corner_mark_item () : base(max_field_count) {}

		public corner_mark_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.push_type = base.deserialize.read_integer ();
					break;
				case 1:
					this.id = base.deserialize.read_integer ();
					break;
				case 2:
					this.corner_mark_name = base.deserialize.read_string ();
					break;
				case 3:
					this.corner_mark_name_colour = base.deserialize.read_string ();
					break;
				case 4:
					this.biz_id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.push_type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.corner_mark_name, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.corner_mark_name_colour, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.biz_id, 4);
			}

			return base.serialize.close ();
		}
	}


	public class db_item : SprotoTypeBase {
		private static int max_field_count = 6;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private string _name; // tag 1
		public string name {
			get { return _name; }
			set { base.has_field.set_field (1, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _type; // tag 2
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (2, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (2); }
		}

		private string _comment; // tag 3
		public string comment {
			get { return _comment; }
			set { base.has_field.set_field (3, true); _comment = value; }
		}
		public bool HasComment {
			get { return base.has_field.has_field (3); }
		}

		private string _icon; // tag 4
		public string icon {
			get { return _icon; }
			set { base.has_field.set_field (4, true); _icon = value; }
		}
		public bool HasIcon {
			get { return base.has_field.has_field (4); }
		}

		private extra_params_prop _extra_params; // tag 5
		public extra_params_prop extra_params {
			get { return _extra_params; }
			set { base.has_field.set_field (5, true); _extra_params = value; }
		}
		public bool HasExtra_params {
			get { return base.has_field.has_field (5); }
		}

		public db_item () : base(max_field_count) {}

		public db_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.name = base.deserialize.read_string ();
					break;
				case 2:
					this.type = base.deserialize.read_integer ();
					break;
				case 3:
					this.comment = base.deserialize.read_string ();
					break;
				case 4:
					this.icon = base.deserialize.read_string ();
					break;
				case 5:
					this.extra_params = base.deserialize.read_obj<extra_params_prop> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.name, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.type, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.comment, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.icon, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_obj (this.extra_params, 5);
			}

			return base.serialize.close ();
		}
	}


	public class delete_mail {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<string> _guids; // tag 0
			public List<string> guids {
				get { return _guids; }
				set { base.has_field.set_field (0, true); _guids = value; }
			}
			public bool HasGuids {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.guids = base.deserialize.read_string_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.guids, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class equipment : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _create_time; // tag 1
		public Int64 create_time {
			get { return _create_time; }
			set { base.has_field.set_field (1, true); _create_time = value; }
		}
		public bool HasCreate_time {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _expire_time; // tag 2
		public Int64 expire_time {
			get { return _expire_time; }
			set { base.has_field.set_field (2, true); _expire_time = value; }
		}
		public bool HasExpire_time {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _is_use; // tag 3
		public Int64 is_use {
			get { return _is_use; }
			set { base.has_field.set_field (3, true); _is_use = value; }
		}
		public bool HasIs_use {
			get { return base.has_field.has_field (3); }
		}

		public equipment () : base(max_field_count) {}

		public equipment (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.create_time = base.deserialize.read_integer ();
					break;
				case 2:
					this.expire_time = base.deserialize.read_integer ();
					break;
				case 3:
					this.is_use = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.create_time, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.expire_time, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.is_use, 3);
			}

			return base.serialize.close ();
		}
	}


	public class extra_params_prop : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _use_type; // tag 0
		public Int64 use_type {
			get { return _use_type; }
			set { base.has_field.set_field (0, true); _use_type = value; }
		}
		public bool HasUse_type {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _receive_goods_item_id; // tag 1
		public Int64 receive_goods_item_id {
			get { return _receive_goods_item_id; }
			set { base.has_field.set_field (1, true); _receive_goods_item_id = value; }
		}
		public bool HasReceive_goods_item_id {
			get { return base.has_field.has_field (1); }
		}

		public extra_params_prop () : base(max_field_count) {}

		public extra_params_prop (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.use_type = base.deserialize.read_integer ();
					break;
				case 1:
					this.receive_goods_item_id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.use_type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.receive_goods_item_id, 1);
			}

			return base.serialize.close ();
		}
	}


	public class fire_event : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private string _rot; // tag 0
		public string rot {
			get { return _rot; }
			set { base.has_field.set_field (0, true); _rot = value; }
		}
		public bool HasRot {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _bullet_id; // tag 1
		public Int64 bullet_id {
			get { return _bullet_id; }
			set { base.has_field.set_field (1, true); _bullet_id = value; }
		}
		public bool HasBullet_id {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _lock_fish_id; // tag 2
		public Int64 lock_fish_id {
			get { return _lock_fish_id; }
			set { base.has_field.set_field (2, true); _lock_fish_id = value; }
		}
		public bool HasLock_fish_id {
			get { return base.has_field.has_field (2); }
		}

		public fire_event () : base(max_field_count) {}

		public fire_event (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.rot = base.deserialize.read_string ();
					break;
				case 1:
					this.bullet_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.lock_fish_id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.rot, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.bullet_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.lock_fish_id, 2);
			}

			return base.serialize.close ();
		}
	}


	public class fish : SprotoTypeBase {
		private static int max_field_count = 13;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _tag_id; // tag 1
		public Int64 tag_id {
			get { return _tag_id; }
			set { base.has_field.set_field (1, true); _tag_id = value; }
		}
		public bool HasTag_id {
			get { return base.has_field.has_field (1); }
		}

		private List<Int64> _path; // tag 2
		public List<Int64> path {
			get { return _path; }
			set { base.has_field.set_field (2, true); _path = value; }
		}
		public bool HasPath {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _time; // tag 3
		public Int64 time {
			get { return _time; }
			set { base.has_field.set_field (3, true); _time = value; }
		}
		public bool HasTime {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _change_id; // tag 4
		public Int64 change_id {
			get { return _change_id; }
			set { base.has_field.set_field (4, true); _change_id = value; }
		}
		public bool HasChange_id {
			get { return base.has_field.has_field (4); }
		}

		private List<Int64> _func_ids; // tag 5
		public List<Int64> func_ids {
			get { return _func_ids; }
			set { base.has_field.set_field (5, true); _func_ids = value; }
		}
		public bool HasFunc_ids {
			get { return base.has_field.has_field (5); }
		}

		private List<Int64> _func_params; // tag 6
		public List<Int64> func_params {
			get { return _func_params; }
			set { base.has_field.set_field (6, true); _func_params = value; }
		}
		public bool HasFunc_params {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _pos; // tag 7
		public Int64 pos {
			get { return _pos; }
			set { base.has_field.set_field (7, true); _pos = value; }
		}
		public bool HasPos {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _protect_tag; // tag 8
		public Int64 protect_tag {
			get { return _protect_tag; }
			set { base.has_field.set_field (8, true); _protect_tag = value; }
		}
		public bool HasProtect_tag {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _forzen_t; // tag 9
		public Int64 forzen_t {
			get { return _forzen_t; }
			set { base.has_field.set_field (9, true); _forzen_t = value; }
		}
		public bool HasForzen_t {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _expiration_t; // tag 10
		public Int64 expiration_t {
			get { return _expiration_t; }
			set { base.has_field.set_field (10, true); _expiration_t = value; }
		}
		public bool HasExpiration_t {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _score; // tag 11
		public Int64 score {
			get { return _score; }
			set { base.has_field.set_field (11, true); _score = value; }
		}
		public bool HasScore {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _charm_t; // tag 12
		public Int64 charm_t {
			get { return _charm_t; }
			set { base.has_field.set_field (12, true); _charm_t = value; }
		}
		public bool HasCharm_t {
			get { return base.has_field.has_field (12); }
		}

		public fish () : base(max_field_count) {}

		public fish (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.tag_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.path = base.deserialize.read_integer_list ();
					break;
				case 3:
					this.time = base.deserialize.read_integer ();
					break;
				case 4:
					this.change_id = base.deserialize.read_integer ();
					break;
				case 5:
					this.func_ids = base.deserialize.read_integer_list ();
					break;
				case 6:
					this.func_params = base.deserialize.read_integer_list ();
					break;
				case 7:
					this.pos = base.deserialize.read_integer ();
					break;
				case 8:
					this.protect_tag = base.deserialize.read_integer ();
					break;
				case 9:
					this.forzen_t = base.deserialize.read_integer ();
					break;
				case 10:
					this.expiration_t = base.deserialize.read_integer ();
					break;
				case 11:
					this.score = base.deserialize.read_integer ();
					break;
				case 12:
					this.charm_t = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.tag_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.path, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.time, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.change_id, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.func_ids, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.func_params, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.pos, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.protect_tag, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.forzen_t, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.expiration_t, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.score, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.charm_t, 12);
			}

			return base.serialize.close ();
		}
	}


	public class fish_net_event : SprotoTypeBase {
		private static int max_field_count = 14;
		
		
		private string _uid; // tag 1
		public string uid {
			get { return _uid; }
			set { base.has_field.set_field (0, true); _uid = value; }
		}
		public bool HasUid {
			get { return base.has_field.has_field (0); }
		}

		private List<victim> _fishes; // tag 2
		public List<victim> fishes {
			get { return _fishes; }
			set { base.has_field.set_field (1, true); _fishes = value; }
		}
		public bool HasFishes {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _factor; // tag 3
		public Int64 factor {
			get { return _factor; }
			set { base.has_field.set_field (2, true); _factor = value; }
		}
		public bool HasFactor {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _silo_award; // tag 4
		public Int64 silo_award {
			get { return _silo_award; }
			set { base.has_field.set_field (3, true); _silo_award = value; }
		}
		public bool HasSilo_award {
			get { return base.has_field.has_field (3); }
		}

		private string _total_gold; // tag 5
		public string total_gold {
			get { return _total_gold; }
			set { base.has_field.set_field (4, true); _total_gold = value; }
		}
		public bool HasTotal_gold {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _total_exp; // tag 6
		public Int64 total_exp {
			get { return _total_exp; }
			set { base.has_field.set_field (5, true); _total_exp = value; }
		}
		public bool HasTotal_exp {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _func_id; // tag 7
		public Int64 func_id {
			get { return _func_id; }
			set { base.has_field.set_field (6, true); _func_id = value; }
		}
		public bool HasFunc_id {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _net_id; // tag 8
		public Int64 net_id {
			get { return _net_id; }
			set { base.has_field.set_field (7, true); _net_id = value; }
		}
		public bool HasNet_id {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _total_diamond; // tag 9
		public Int64 total_diamond {
			get { return _total_diamond; }
			set { base.has_field.set_field (8, true); _total_diamond = value; }
		}
		public bool HasTotal_diamond {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _bullet; // tag 10
		public Int64 bullet {
			get { return _bullet; }
			set { base.has_field.set_field (9, true); _bullet = value; }
		}
		public bool HasBullet {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _add_gold; // tag 11
		public Int64 add_gold {
			get { return _add_gold; }
			set { base.has_field.set_field (10, true); _add_gold = value; }
		}
		public bool HasAdd_gold {
			get { return base.has_field.has_field (10); }
		}

		private List<victim> _hitting_fishes; // tag 12
		public List<victim> hitting_fishes {
			get { return _hitting_fishes; }
			set { base.has_field.set_field (11, true); _hitting_fishes = value; }
		}
		public bool HasHitting_fishes {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _special_fish_left_gold; // tag 13
		public Int64 special_fish_left_gold {
			get { return _special_fish_left_gold; }
			set { base.has_field.set_field (12, true); _special_fish_left_gold = value; }
		}
		public bool HasSpecial_fish_left_gold {
			get { return base.has_field.has_field (12); }
		}

		public fish_net_event () : base(max_field_count) {}

		public fish_net_event (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 1:
					this.uid = base.deserialize.read_string ();
					break;
				case 2:
					this.fishes = base.deserialize.read_obj_list<victim> ();
					break;
				case 3:
					this.factor = base.deserialize.read_integer ();
					break;
				case 4:
					this.silo_award = base.deserialize.read_integer ();
					break;
				case 5:
					this.total_gold = base.deserialize.read_string ();
					break;
				case 6:
					this.total_exp = base.deserialize.read_integer ();
					break;
				case 7:
					this.func_id = base.deserialize.read_integer ();
					break;
				case 8:
					this.net_id = base.deserialize.read_integer ();
					break;
				case 9:
					this.total_diamond = base.deserialize.read_integer ();
					break;
				case 10:
					this.bullet = base.deserialize.read_integer ();
					break;
				case 11:
					this.add_gold = base.deserialize.read_integer ();
					break;
				case 12:
					this.hitting_fishes = base.deserialize.read_obj_list<victim> ();
					break;
				case 13:
					this.special_fish_left_gold = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.uid, 1);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_obj (this.fishes, 2);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.factor, 3);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.silo_award, 4);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.total_gold, 5);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.total_exp, 6);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.func_id, 7);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.net_id, 8);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.total_diamond, 9);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.bullet, 10);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.add_gold, 11);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_obj (this.hitting_fishes, 12);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.special_fish_left_gold, 13);
			}

			return base.serialize.close ();
		}
	}


	public class game_activity_list {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<activity_info> _list; // tag 0
			public List<activity_info> list {
				get { return _list; }
				set { base.has_field.set_field (0, true); _list = value; }
			}
			public bool HasList {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.list = base.deserialize.read_obj_list<activity_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.list, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_broadcast_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 8;
			
			
			private Int64 _type; // tag 0
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (0, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _id; // tag 1
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (1, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (1); }
			}

			private List<string> _info; // tag 2
			public List<string> info {
				get { return _info; }
				set { base.has_field.set_field (2, true); _info = value; }
			}
			public bool HasInfo {
				get { return base.has_field.has_field (2); }
			}

			private string _str; // tag 3
			public string str {
				get { return _str; }
				set { base.has_field.set_field (3, true); _str = value; }
			}
			public bool HasStr {
				get { return base.has_field.has_field (3); }
			}

			private broadcast_tips _tips; // tag 4
			public broadcast_tips tips {
				get { return _tips; }
				set { base.has_field.set_field (4, true); _tips = value; }
			}
			public bool HasTips {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _order; // tag 5
			public Int64 order {
				get { return _order; }
				set { base.has_field.set_field (5, true); _order = value; }
			}
			public bool HasOrder {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _style; // tag 6
			public Int64 style {
				get { return _style; }
				set { base.has_field.set_field (6, true); _style = value; }
			}
			public bool HasStyle {
				get { return base.has_field.has_field (6); }
			}

			private bool _guide; // tag 7
			public bool guide {
				get { return _guide; }
				set { base.has_field.set_field (7, true); _guide = value; }
			}
			public bool HasGuide {
				get { return base.has_field.has_field (7); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.type = base.deserialize.read_integer ();
						break;
					case 1:
						this.id = base.deserialize.read_integer ();
						break;
					case 2:
						this.info = base.deserialize.read_string_list ();
						break;
					case 3:
						this.str = base.deserialize.read_string ();
						break;
					case 4:
						this.tips = base.deserialize.read_obj<broadcast_tips> ();
						break;
					case 5:
						this.order = base.deserialize.read_integer ();
						break;
					case 6:
						this.style = base.deserialize.read_integer ();
						break;
					case 7:
						this.guide = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.type, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.id, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.info, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.str, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_obj (this.tips, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.order, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.style, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_boolean (this.guide, 7);
				}

				return base.serialize.close ();
			}
		}


	}


	public class game_notice_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 7;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _style; // tag 1
			public Int64 style {
				get { return _style; }
				set { base.has_field.set_field (1, true); _style = value; }
			}
			public bool HasStyle {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _type; // tag 2
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (2, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (2); }
			}

			private string _text; // tag 3
			public string text {
				get { return _text; }
				set { base.has_field.set_field (3, true); _text = value; }
			}
			public bool HasText {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _order; // tag 4
			public Int64 order {
				get { return _order; }
				set { base.has_field.set_field (4, true); _order = value; }
			}
			public bool HasOrder {
				get { return base.has_field.has_field (4); }
			}

			private string _channel; // tag 5
			public string channel {
				get { return _channel; }
				set { base.has_field.set_field (5, true); _channel = value; }
			}
			public bool HasChannel {
				get { return base.has_field.has_field (5); }
			}

			private string _title; // tag 6
			public string title {
				get { return _title; }
				set { base.has_field.set_field (6, true); _title = value; }
			}
			public bool HasTitle {
				get { return base.has_field.has_field (6); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					case 1:
						this.style = base.deserialize.read_integer ();
						break;
					case 2:
						this.type = base.deserialize.read_integer ();
						break;
					case 3:
						this.text = base.deserialize.read_string ();
						break;
					case 4:
						this.order = base.deserialize.read_integer ();
						break;
					case 5:
						this.channel = base.deserialize.read_string ();
						break;
					case 6:
						this.title = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.style, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.type, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.text, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.order, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_string (this.channel, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_string (this.title, 6);
				}

				return base.serialize.close ();
			}
		}


	}


	public class kick_user {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _reason; // tag 0
			public Int64 reason {
				get { return _reason; }
				set { base.has_field.set_field (0, true); _reason = value; }
			}
			public bool HasReason {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.reason = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.reason, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class loading_img_item : SprotoTypeBase {
		private static int max_field_count = 11;
		
		
		private Int64 _push_type; // tag 0
		public Int64 push_type {
			get { return _push_type; }
			set { base.has_field.set_field (0, true); _push_type = value; }
		}
		public bool HasPush_type {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _id; // tag 1
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (1, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (1); }
		}

		private string _title; // tag 2
		public string title {
			get { return _title; }
			set { base.has_field.set_field (2, true); _title = value; }
		}
		public bool HasTitle {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _order; // tag 3
		public Int64 order {
			get { return _order; }
			set { base.has_field.set_field (3, true); _order = value; }
		}
		public bool HasOrder {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _user; // tag 4
		public Int64 user {
			get { return _user; }
			set { base.has_field.set_field (4, true); _user = value; }
		}
		public bool HasUser {
			get { return base.has_field.has_field (4); }
		}

		private List<Int64> _room; // tag 5
		public List<Int64> room {
			get { return _room; }
			set { base.has_field.set_field (5, true); _room = value; }
		}
		public bool HasRoom {
			get { return base.has_field.has_field (5); }
		}

		private List<string> _res; // tag 6
		public List<string> res {
			get { return _res; }
			set { base.has_field.set_field (6, true); _res = value; }
		}
		public bool HasRes {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _birth; // tag 7
		public Int64 birth {
			get { return _birth; }
			set { base.has_field.set_field (7, true); _birth = value; }
		}
		public bool HasBirth {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _begin; // tag 8
		public Int64 begin {
			get { return _begin; }
			set { base.has_field.set_field (8, true); _begin = value; }
		}
		public bool HasBegin {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _ending; // tag 9
		public Int64 ending {
			get { return _ending; }
			set { base.has_field.set_field (9, true); _ending = value; }
		}
		public bool HasEnding {
			get { return base.has_field.has_field (9); }
		}

		private List<string> _channel; // tag 10
		public List<string> channel {
			get { return _channel; }
			set { base.has_field.set_field (10, true); _channel = value; }
		}
		public bool HasChannel {
			get { return base.has_field.has_field (10); }
		}

		public loading_img_item () : base(max_field_count) {}

		public loading_img_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.push_type = base.deserialize.read_integer ();
					break;
				case 1:
					this.id = base.deserialize.read_integer ();
					break;
				case 2:
					this.title = base.deserialize.read_string ();
					break;
				case 3:
					this.order = base.deserialize.read_integer ();
					break;
				case 4:
					this.user = base.deserialize.read_integer ();
					break;
				case 5:
					this.room = base.deserialize.read_integer_list ();
					break;
				case 6:
					this.res = base.deserialize.read_string_list ();
					break;
				case 7:
					this.birth = base.deserialize.read_integer ();
					break;
				case 8:
					this.begin = base.deserialize.read_integer ();
					break;
				case 9:
					this.ending = base.deserialize.read_integer ();
					break;
				case 10:
					this.channel = base.deserialize.read_string_list ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.push_type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.title, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.order, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.user, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.room, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.res, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.birth, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.begin, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.ending, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_string (this.channel, 10);
			}

			return base.serialize.close ();
		}
	}


	public class login_queue_wait {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _wait_time; // tag 0
			public Int64 wait_time {
				get { return _wait_time; }
				set { base.has_field.set_field (0, true); _wait_time = value; }
			}
			public bool HasWait_time {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.wait_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.wait_time, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class mail : SprotoTypeBase {
		private static int max_field_count = 15;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private string _guid; // tag 1
		public string guid {
			get { return _guid; }
			set { base.has_field.set_field (1, true); _guid = value; }
		}
		public bool HasGuid {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _type; // tag 2
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (2, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (2); }
		}

		private string _title; // tag 3
		public string title {
			get { return _title; }
			set { base.has_field.set_field (3, true); _title = value; }
		}
		public bool HasTitle {
			get { return base.has_field.has_field (3); }
		}

		private string _content; // tag 4
		public string content {
			get { return _content; }
			set { base.has_field.set_field (4, true); _content = value; }
		}
		public bool HasContent {
			get { return base.has_field.has_field (4); }
		}

		private List<prop> _reward; // tag 5
		public List<prop> reward {
			get { return _reward; }
			set { base.has_field.set_field (5, true); _reward = value; }
		}
		public bool HasReward {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _create_time; // tag 6
		public Int64 create_time {
			get { return _create_time; }
			set { base.has_field.set_field (6, true); _create_time = value; }
		}
		public bool HasCreate_time {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _state; // tag 7
		public Int64 state {
			get { return _state; }
			set { base.has_field.set_field (7, true); _state = value; }
		}
		public bool HasState {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _expire_time; // tag 8
		public Int64 expire_time {
			get { return _expire_time; }
			set { base.has_field.set_field (8, true); _expire_time = value; }
		}
		public bool HasExpire_time {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _from_account_id; // tag 9
		public Int64 from_account_id {
			get { return _from_account_id; }
			set { base.has_field.set_field (9, true); _from_account_id = value; }
		}
		public bool HasFrom_account_id {
			get { return base.has_field.has_field (9); }
		}

		private string _jump_text; // tag 10
		public string jump_text {
			get { return _jump_text; }
			set { base.has_field.set_field (10, true); _jump_text = value; }
		}
		public bool HasJump_text {
			get { return base.has_field.has_field (10); }
		}

		private string _jump_url; // tag 11
		public string jump_url {
			get { return _jump_url; }
			set { base.has_field.set_field (11, true); _jump_url = value; }
		}
		public bool HasJump_url {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _content_id; // tag 12
		public Int64 content_id {
			get { return _content_id; }
			set { base.has_field.set_field (12, true); _content_id = value; }
		}
		public bool HasContent_id {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _from_vip; // tag 13
		public Int64 from_vip {
			get { return _from_vip; }
			set { base.has_field.set_field (13, true); _from_vip = value; }
		}
		public bool HasFrom_vip {
			get { return base.has_field.has_field (13); }
		}

		private string _from_nickname; // tag 14
		public string from_nickname {
			get { return _from_nickname; }
			set { base.has_field.set_field (14, true); _from_nickname = value; }
		}
		public bool HasFrom_nickname {
			get { return base.has_field.has_field (14); }
		}

		public mail () : base(max_field_count) {}

		public mail (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.guid = base.deserialize.read_string ();
					break;
				case 2:
					this.type = base.deserialize.read_integer ();
					break;
				case 3:
					this.title = base.deserialize.read_string ();
					break;
				case 4:
					this.content = base.deserialize.read_string ();
					break;
				case 5:
					this.reward = base.deserialize.read_obj_list<prop> ();
					break;
				case 6:
					this.create_time = base.deserialize.read_integer ();
					break;
				case 7:
					this.state = base.deserialize.read_integer ();
					break;
				case 8:
					this.expire_time = base.deserialize.read_integer ();
					break;
				case 9:
					this.from_account_id = base.deserialize.read_integer ();
					break;
				case 10:
					this.jump_text = base.deserialize.read_string ();
					break;
				case 11:
					this.jump_url = base.deserialize.read_string ();
					break;
				case 12:
					this.content_id = base.deserialize.read_integer ();
					break;
				case 13:
					this.from_vip = base.deserialize.read_integer ();
					break;
				case 14:
					this.from_nickname = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.guid, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.type, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.title, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.content, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_obj (this.reward, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.create_time, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.state, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.expire_time, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.from_account_id, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_string (this.jump_text, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_string (this.jump_url, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.content_id, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.from_vip, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_string (this.from_nickname, 14);
			}

			return base.serialize.close ();
		}
	}


	public class mail_list {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private List<mail> _mails; // tag 0
			public List<mail> mails {
				get { return _mails; }
				set { base.has_field.set_field (0, true); _mails = value; }
			}
			public bool HasMails {
				get { return base.has_field.has_field (0); }
			}

			private bool _is_end; // tag 1
			public bool is_end {
				get { return _is_end; }
				set { base.has_field.set_field (1, true); _is_end = value; }
			}
			public bool HasIs_end {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.mails = base.deserialize.read_obj_list<mail> ();
						break;
					case 1:
						this.is_end = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.mails, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_boolean (this.is_end, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class notice {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _content; // tag 0
			public string content {
				get { return _content; }
				set { base.has_field.set_field (0, true); _content = value; }
			}
			public bool HasContent {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.content = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.content, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class package : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _session; // tag 1
		public Int64 session {
			get { return _session; }
			set { base.has_field.set_field (1, true); _session = value; }
		}
		public bool HasSession {
			get { return base.has_field.has_field (1); }
		}

		public package () : base(max_field_count) {}

		public package (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.session = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.session, 1);
			}

			return base.serialize.close ();
		}
	}


	public class popup_msg {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _content; // tag 0
			public string content {
				get { return _content; }
				set { base.has_field.set_field (0, true); _content = value; }
			}
			public bool HasContent {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.content = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.content, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class pre_notice_boss_item : SprotoTypeBase {
		private static int max_field_count = 15;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _type; // tag 1
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (1, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (1); }
		}

		private string _title; // tag 2
		public string title {
			get { return _title; }
			set { base.has_field.set_field (2, true); _title = value; }
		}
		public bool HasTitle {
			get { return base.has_field.has_field (2); }
		}

		private string _png1; // tag 3
		public string png1 {
			get { return _png1; }
			set { base.has_field.set_field (3, true); _png1 = value; }
		}
		public bool HasPng1 {
			get { return base.has_field.has_field (3); }
		}

		private string _png2; // tag 4
		public string png2 {
			get { return _png2; }
			set { base.has_field.set_field (4, true); _png2 = value; }
		}
		public bool HasPng2 {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _go_to; // tag 5
		public Int64 go_to {
			get { return _go_to; }
			set { base.has_field.set_field (5, true); _go_to = value; }
		}
		public bool HasGo_to {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _pre_notice_time; // tag 6
		public Int64 pre_notice_time {
			get { return _pre_notice_time; }
			set { base.has_field.set_field (6, true); _pre_notice_time = value; }
		}
		public bool HasPre_notice_time {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _beon_countdown; // tag 7
		public Int64 beon_countdown {
			get { return _beon_countdown; }
			set { base.has_field.set_field (7, true); _beon_countdown = value; }
		}
		public bool HasBeon_countdown {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _switch_countdown; // tag 8
		public Int64 switch_countdown {
			get { return _switch_countdown; }
			set { base.has_field.set_field (8, true); _switch_countdown = value; }
		}
		public bool HasSwitch_countdown {
			get { return base.has_field.has_field (8); }
		}

		private List<Int64> _room_limit; // tag 9
		public List<Int64> room_limit {
			get { return _room_limit; }
			set { base.has_field.set_field (9, true); _room_limit = value; }
		}
		public bool HasRoom_limit {
			get { return base.has_field.has_field (9); }
		}

		private List<Int64> _vip_limit; // tag 10
		public List<Int64> vip_limit {
			get { return _vip_limit; }
			set { base.has_field.set_field (10, true); _vip_limit = value; }
		}
		public bool HasVip_limit {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _multi_limit; // tag 11
		public Int64 multi_limit {
			get { return _multi_limit; }
			set { base.has_field.set_field (11, true); _multi_limit = value; }
		}
		public bool HasMulti_limit {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _coin_limit; // tag 12
		public Int64 coin_limit {
			get { return _coin_limit; }
			set { base.has_field.set_field (12, true); _coin_limit = value; }
		}
		public bool HasCoin_limit {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _energy_limit; // tag 13
		public Int64 energy_limit {
			get { return _energy_limit; }
			set { base.has_field.set_field (13, true); _energy_limit = value; }
		}
		public bool HasEnergy_limit {
			get { return base.has_field.has_field (13); }
		}

		private Int64 _lottery_limit; // tag 14
		public Int64 lottery_limit {
			get { return _lottery_limit; }
			set { base.has_field.set_field (14, true); _lottery_limit = value; }
		}
		public bool HasLottery_limit {
			get { return base.has_field.has_field (14); }
		}

		public pre_notice_boss_item () : base(max_field_count) {}

		public pre_notice_boss_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.type = base.deserialize.read_integer ();
					break;
				case 2:
					this.title = base.deserialize.read_string ();
					break;
				case 3:
					this.png1 = base.deserialize.read_string ();
					break;
				case 4:
					this.png2 = base.deserialize.read_string ();
					break;
				case 5:
					this.go_to = base.deserialize.read_integer ();
					break;
				case 6:
					this.pre_notice_time = base.deserialize.read_integer ();
					break;
				case 7:
					this.beon_countdown = base.deserialize.read_integer ();
					break;
				case 8:
					this.switch_countdown = base.deserialize.read_integer ();
					break;
				case 9:
					this.room_limit = base.deserialize.read_integer_list ();
					break;
				case 10:
					this.vip_limit = base.deserialize.read_integer_list ();
					break;
				case 11:
					this.multi_limit = base.deserialize.read_integer ();
					break;
				case 12:
					this.coin_limit = base.deserialize.read_integer ();
					break;
				case 13:
					this.energy_limit = base.deserialize.read_integer ();
					break;
				case 14:
					this.lottery_limit = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.type, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.title, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.png1, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.png2, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.go_to, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.pre_notice_time, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.beon_countdown, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.switch_countdown, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.room_limit, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.vip_limit, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.multi_limit, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.coin_limit, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.energy_limit, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_integer (this.lottery_limit, 14);
			}

			return base.serialize.close ();
		}
	}


	public class prop : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _quantity; // tag 1
		public Int64 quantity {
			get { return _quantity; }
			set { base.has_field.set_field (1, true); _quantity = value; }
		}
		public bool HasQuantity {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _add_time; // tag 2
		public Int64 add_time {
			get { return _add_time; }
			set { base.has_field.set_field (2, true); _add_time = value; }
		}
		public bool HasAdd_time {
			get { return base.has_field.has_field (2); }
		}

		public prop () : base(max_field_count) {}

		public prop (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.quantity = base.deserialize.read_integer ();
					break;
				case 2:
					this.add_time = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.quantity, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.add_time, 2);
			}

			return base.serialize.close ();
		}
	}


	public class push_changed_equipment {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _change_type; // tag 0
			public Int64 change_type {
				get { return _change_type; }
				set { base.has_field.set_field (0, true); _change_type = value; }
			}
			public bool HasChange_type {
				get { return base.has_field.has_field (0); }
			}

			private List<equipment> _equip_list; // tag 1
			public List<equipment> equip_list {
				get { return _equip_list; }
				set { base.has_field.set_field (1, true); _equip_list = value; }
			}
			public bool HasEquip_list {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.change_type = base.deserialize.read_integer ();
						break;
					case 1:
						this.equip_list = base.deserialize.read_obj_list<equipment> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.change_type, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.equip_list, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class push_changed_task {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private List<task_info> _list; // tag 0
			public List<task_info> list {
				get { return _list; }
				set { base.has_field.set_field (0, true); _list = value; }
			}
			public bool HasList {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _event_id; // tag 1
			public Int64 event_id {
				get { return _event_id; }
				set { base.has_field.set_field (1, true); _event_id = value; }
			}
			public bool HasEvent_id {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.list = base.deserialize.read_obj_list<task_info> ();
						break;
					case 1:
						this.event_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.list, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.event_id, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class push_prop_change {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _action; // tag 0
			public Int64 action {
				get { return _action; }
				set { base.has_field.set_field (0, true); _action = value; }
			}
			public bool HasAction {
				get { return base.has_field.has_field (0); }
			}

			private List<prop> _items; // tag 1
			public List<prop> items {
				get { return _items; }
				set { base.has_field.set_field (1, true); _items = value; }
			}
			public bool HasItems {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.action = base.deserialize.read_integer ();
						break;
					case 1:
						this.items = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.action, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.items, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class push_removed_task {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<Int64> _task_ids; // tag 0
			public List<Int64> task_ids {
				get { return _task_ids; }
				set { base.has_field.set_field (0, true); _task_ids = value; }
			}
			public bool HasTask_ids {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.task_ids = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.task_ids, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class push_skill_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 7;
			
			
			private Int64 _skill_type; // tag 0
			public Int64 skill_type {
				get { return _skill_type; }
				set { base.has_field.set_field (0, true); _skill_type = value; }
			}
			public bool HasSkill_type {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _time; // tag 1
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (1, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (1); }
			}

			private List<Int64> _tag_ids; // tag 2
			public List<Int64> tag_ids {
				get { return _tag_ids; }
				set { base.has_field.set_field (2, true); _tag_ids = value; }
			}
			public bool HasTag_ids {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _cannon_id; // tag 3
			public Int64 cannon_id {
				get { return _cannon_id; }
				set { base.has_field.set_field (3, true); _cannon_id = value; }
			}
			public bool HasCannon_id {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _add_speed; // tag 4
			public Int64 add_speed {
				get { return _add_speed; }
				set { base.has_field.set_field (4, true); _add_speed = value; }
			}
			public bool HasAdd_speed {
				get { return base.has_field.has_field (4); }
			}

			private List<fish> _frozen_fishes; // tag 5
			public List<fish> frozen_fishes {
				get { return _frozen_fishes; }
				set { base.has_field.set_field (5, true); _frozen_fishes = value; }
			}
			public bool HasFrozen_fishes {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _cd_time; // tag 6
			public Int64 cd_time {
				get { return _cd_time; }
				set { base.has_field.set_field (6, true); _cd_time = value; }
			}
			public bool HasCd_time {
				get { return base.has_field.has_field (6); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.skill_type = base.deserialize.read_integer ();
						break;
					case 1:
						this.time = base.deserialize.read_integer ();
						break;
					case 2:
						this.tag_ids = base.deserialize.read_integer_list ();
						break;
					case 3:
						this.cannon_id = base.deserialize.read_integer ();
						break;
					case 4:
						this.add_speed = base.deserialize.read_integer ();
						break;
					case 5:
						this.frozen_fishes = base.deserialize.read_obj_list<fish> ();
						break;
					case 6:
						this.cd_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.skill_type, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.time, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.tag_ids, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.cannon_id, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.add_speed, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_obj (this.frozen_fishes, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.cd_time, 6);
				}

				return base.serialize.close ();
			}
		}


	}


	public class push_tb_cfg {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 15;
			
			
			private Int64 _tb_cfg_id; // tag 0
			public Int64 tb_cfg_id {
				get { return _tb_cfg_id; }
				set { base.has_field.set_field (0, true); _tb_cfg_id = value; }
			}
			public bool HasTb_cfg_id {
				get { return base.has_field.has_field (0); }
			}

			private List<banner_item> _banner_cfg; // tag 1
			public List<banner_item> banner_cfg {
				get { return _banner_cfg; }
				set { base.has_field.set_field (1, true); _banner_cfg = value; }
			}
			public bool HasBanner_cfg {
				get { return base.has_field.has_field (1); }
			}

			private List<tab_item> _tab_cfg; // tag 2
			public List<tab_item> tab_cfg {
				get { return _tab_cfg; }
				set { base.has_field.set_field (2, true); _tab_cfg = value; }
			}
			public bool HasTab_cfg {
				get { return base.has_field.has_field (2); }
			}

			private List<corner_mark_item> _corner_mark_cfg; // tag 3
			public List<corner_mark_item> corner_mark_cfg {
				get { return _corner_mark_cfg; }
				set { base.has_field.set_field (3, true); _corner_mark_cfg = value; }
			}
			public bool HasCorner_mark_cfg {
				get { return base.has_field.has_field (3); }
			}

			private List<simple_exchange_item> _simple_exchange_cfg; // tag 4
			public List<simple_exchange_item> simple_exchange_cfg {
				get { return _simple_exchange_cfg; }
				set { base.has_field.set_field (4, true); _simple_exchange_cfg = value; }
			}
			public bool HasSimple_exchange_cfg {
				get { return base.has_field.has_field (4); }
			}

			private List<banner_item> _conch_guide_cfg; // tag 5
			public List<banner_item> conch_guide_cfg {
				get { return _conch_guide_cfg; }
				set { base.has_field.set_field (5, true); _conch_guide_cfg = value; }
			}
			public bool HasConch_guide_cfg {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _index_page; // tag 6
			public Int64 index_page {
				get { return _index_page; }
				set { base.has_field.set_field (6, true); _index_page = value; }
			}
			public bool HasIndex_page {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _send_last; // tag 7
			public Int64 send_last {
				get { return _send_last; }
				set { base.has_field.set_field (7, true); _send_last = value; }
			}
			public bool HasSend_last {
				get { return base.has_field.has_field (7); }
			}

			private List<db_item> _db_items_cfg; // tag 8
			public List<db_item> db_items_cfg {
				get { return _db_items_cfg; }
				set { base.has_field.set_field (8, true); _db_items_cfg = value; }
			}
			public bool HasDb_items_cfg {
				get { return base.has_field.has_field (8); }
			}

			private conch_common_item _conch_common_cfg; // tag 9
			public conch_common_item conch_common_cfg {
				get { return _conch_common_cfg; }
				set { base.has_field.set_field (9, true); _conch_common_cfg = value; }
			}
			public bool HasConch_common_cfg {
				get { return base.has_field.has_field (9); }
			}

			private List<task_item> _task_cfg; // tag 10
			public List<task_item> task_cfg {
				get { return _task_cfg; }
				set { base.has_field.set_field (10, true); _task_cfg = value; }
			}
			public bool HasTask_cfg {
				get { return base.has_field.has_field (10); }
			}

			private List<task_off_reward_item> _task_off_reward_cfg; // tag 11
			public List<task_off_reward_item> task_off_reward_cfg {
				get { return _task_off_reward_cfg; }
				set { base.has_field.set_field (11, true); _task_off_reward_cfg = value; }
			}
			public bool HasTask_off_reward_cfg {
				get { return base.has_field.has_field (11); }
			}

			private List<task_common_item> _task_common_cfg; // tag 12
			public List<task_common_item> task_common_cfg {
				get { return _task_common_cfg; }
				set { base.has_field.set_field (12, true); _task_common_cfg = value; }
			}
			public bool HasTask_common_cfg {
				get { return base.has_field.has_field (12); }
			}

			private List<pre_notice_boss_item> _pre_notice_boss_spawn_cfg; // tag 13
			public List<pre_notice_boss_item> pre_notice_boss_spawn_cfg {
				get { return _pre_notice_boss_spawn_cfg; }
				set { base.has_field.set_field (13, true); _pre_notice_boss_spawn_cfg = value; }
			}
			public bool HasPre_notice_boss_spawn_cfg {
				get { return base.has_field.has_field (13); }
			}

			private List<loading_img_item> _loading_img_cfg; // tag 14
			public List<loading_img_item> loading_img_cfg {
				get { return _loading_img_cfg; }
				set { base.has_field.set_field (14, true); _loading_img_cfg = value; }
			}
			public bool HasLoading_img_cfg {
				get { return base.has_field.has_field (14); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.tb_cfg_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.banner_cfg = base.deserialize.read_obj_list<banner_item> ();
						break;
					case 2:
						this.tab_cfg = base.deserialize.read_obj_list<tab_item> ();
						break;
					case 3:
						this.corner_mark_cfg = base.deserialize.read_obj_list<corner_mark_item> ();
						break;
					case 4:
						this.simple_exchange_cfg = base.deserialize.read_obj_list<simple_exchange_item> ();
						break;
					case 5:
						this.conch_guide_cfg = base.deserialize.read_obj_list<banner_item> ();
						break;
					case 6:
						this.index_page = base.deserialize.read_integer ();
						break;
					case 7:
						this.send_last = base.deserialize.read_integer ();
						break;
					case 8:
						this.db_items_cfg = base.deserialize.read_obj_list<db_item> ();
						break;
					case 9:
						this.conch_common_cfg = base.deserialize.read_obj<conch_common_item> ();
						break;
					case 10:
						this.task_cfg = base.deserialize.read_obj_list<task_item> ();
						break;
					case 11:
						this.task_off_reward_cfg = base.deserialize.read_obj_list<task_off_reward_item> ();
						break;
					case 12:
						this.task_common_cfg = base.deserialize.read_obj_list<task_common_item> ();
						break;
					case 13:
						this.pre_notice_boss_spawn_cfg = base.deserialize.read_obj_list<pre_notice_boss_item> ();
						break;
					case 14:
						this.loading_img_cfg = base.deserialize.read_obj_list<loading_img_item> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.tb_cfg_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.banner_cfg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.tab_cfg, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.corner_mark_cfg, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_obj (this.simple_exchange_cfg, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_obj (this.conch_guide_cfg, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.index_page, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.send_last, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_obj (this.db_items_cfg, 8);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_obj (this.conch_common_cfg, 9);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_obj (this.task_cfg, 10);
				}

				if (base.has_field.has_field (11)) {
					base.serialize.write_obj (this.task_off_reward_cfg, 11);
				}

				if (base.has_field.has_field (12)) {
					base.serialize.write_obj (this.task_common_cfg, 12);
				}

				if (base.has_field.has_field (13)) {
					base.serialize.write_obj (this.pre_notice_boss_spawn_cfg, 13);
				}

				if (base.has_field.has_field (14)) {
					base.serialize.write_obj (this.loading_img_cfg, 14);
				}

				return base.serialize.close ();
			}
		}


	}


	public class push_whole_point_day {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _hour; // tag 0
			public Int64 hour {
				get { return _hour; }
				set { base.has_field.set_field (0, true); _hour = value; }
			}
			public bool HasHour {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.hour = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.hour, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class reach_cond : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _num; // tag 1
		public Int64 num {
			get { return _num; }
			set { base.has_field.set_field (1, true); _num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (1); }
		}

		public reach_cond () : base(max_field_count) {}

		public reach_cond (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.num, 1);
			}

			return base.serialize.close ();
		}
	}


	public class room_kick_user {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _reason; // tag 0
			public Int64 reason {
				get { return _reason; }
				set { base.has_field.set_field (0, true); _reason = value; }
			}
			public bool HasReason {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.reason = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.reason, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class simple_exchange_item : SprotoTypeBase {
		private static int max_field_count = 6;
		
		
		private Int64 _push_type; // tag 0
		public Int64 push_type {
			get { return _push_type; }
			set { base.has_field.set_field (0, true); _push_type = value; }
		}
		public bool HasPush_type {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _id; // tag 1
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (1, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _consume_id; // tag 2
		public Int64 consume_id {
			get { return _consume_id; }
			set { base.has_field.set_field (2, true); _consume_id = value; }
		}
		public bool HasConsume_id {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _unit_consume_num; // tag 3
		public Int64 unit_consume_num {
			get { return _unit_consume_num; }
			set { base.has_field.set_field (3, true); _unit_consume_num = value; }
		}
		public bool HasUnit_consume_num {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _reward_id; // tag 4
		public Int64 reward_id {
			get { return _reward_id; }
			set { base.has_field.set_field (4, true); _reward_id = value; }
		}
		public bool HasReward_id {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _unit_reward_num; // tag 5
		public Int64 unit_reward_num {
			get { return _unit_reward_num; }
			set { base.has_field.set_field (5, true); _unit_reward_num = value; }
		}
		public bool HasUnit_reward_num {
			get { return base.has_field.has_field (5); }
		}

		public simple_exchange_item () : base(max_field_count) {}

		public simple_exchange_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.push_type = base.deserialize.read_integer ();
					break;
				case 1:
					this.id = base.deserialize.read_integer ();
					break;
				case 2:
					this.consume_id = base.deserialize.read_integer ();
					break;
				case 3:
					this.unit_consume_num = base.deserialize.read_integer ();
					break;
				case 4:
					this.reward_id = base.deserialize.read_integer ();
					break;
				case 5:
					this.unit_reward_num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.push_type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.consume_id, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.unit_consume_num, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.reward_id, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.unit_reward_num, 5);
			}

			return base.serialize.close ();
		}
	}


	public class small_game_end {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 7;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _id; // tag 1
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (1, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _award; // tag 2
			public List<prop> award {
				get { return _award; }
				set { base.has_field.set_field (2, true); _award = value; }
			}
			public bool HasAward {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _fish_id; // tag 3
			public Int64 fish_id {
				get { return _fish_id; }
				set { base.has_field.set_field (3, true); _fish_id = value; }
			}
			public bool HasFish_id {
				get { return base.has_field.has_field (3); }
			}

			private string _total_gold; // tag 4
			public string total_gold {
				get { return _total_gold; }
				set { base.has_field.set_field (4, true); _total_gold = value; }
			}
			public bool HasTotal_gold {
				get { return base.has_field.has_field (4); }
			}

			private string _total_diamond; // tag 5
			public string total_diamond {
				get { return _total_diamond; }
				set { base.has_field.set_field (5, true); _total_diamond = value; }
			}
			public bool HasTotal_diamond {
				get { return base.has_field.has_field (5); }
			}

			private string _total_energy; // tag 6
			public string total_energy {
				get { return _total_energy; }
				set { base.has_field.set_field (6, true); _total_energy = value; }
			}
			public bool HasTotal_energy {
				get { return base.has_field.has_field (6); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.id = base.deserialize.read_integer ();
						break;
					case 2:
						this.award = base.deserialize.read_obj_list<prop> ();
						break;
					case 3:
						this.fish_id = base.deserialize.read_integer ();
						break;
					case 4:
						this.total_gold = base.deserialize.read_string ();
						break;
					case 5:
						this.total_diamond = base.deserialize.read_string ();
						break;
					case 6:
						this.total_energy = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.id, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.award, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.fish_id, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.total_gold, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_string (this.total_diamond, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_string (this.total_energy, 6);
				}

				return base.serialize.close ();
			}
		}


	}


	public class small_game_return {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _id; // tag 1
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (1, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _award; // tag 2
			public List<prop> award {
				get { return _award; }
				set { base.has_field.set_field (2, true); _award = value; }
			}
			public bool HasAward {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.id = base.deserialize.read_integer ();
						break;
					case 2:
						this.award = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.id, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.award, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class small_game_start {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _id; // tag 1
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (1, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.id, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class switch_cannon {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _cannon_id; // tag 1
			public Int64 cannon_id {
				get { return _cannon_id; }
				set { base.has_field.set_field (1, true); _cannon_id = value; }
			}
			public bool HasCannon_id {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _battery_skill_energy; // tag 2
			public Int64 battery_skill_energy {
				get { return _battery_skill_energy; }
				set { base.has_field.set_field (2, true); _battery_skill_energy = value; }
			}
			public bool HasBattery_skill_energy {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.cannon_id = base.deserialize.read_integer ();
						break;
					case 2:
						this.battery_skill_energy = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.cannon_id, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.battery_skill_energy, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class sync_skill_effect {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 9;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _skill_type; // tag 1
			public Int64 skill_type {
				get { return _skill_type; }
				set { base.has_field.set_field (1, true); _skill_type = value; }
			}
			public bool HasSkill_type {
				get { return base.has_field.has_field (1); }
			}

			private List<Int64> _tag_ids; // tag 2
			public List<Int64> tag_ids {
				get { return _tag_ids; }
				set { base.has_field.set_field (2, true); _tag_ids = value; }
			}
			public bool HasTag_ids {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _is_first; // tag 3
			public Int64 is_first {
				get { return _is_first; }
				set { base.has_field.set_field (3, true); _is_first = value; }
			}
			public bool HasIs_first {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _add_speed; // tag 4
			public Int64 add_speed {
				get { return _add_speed; }
				set { base.has_field.set_field (4, true); _add_speed = value; }
			}
			public bool HasAdd_speed {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _cannon_id; // tag 5
			public Int64 cannon_id {
				get { return _cannon_id; }
				set { base.has_field.set_field (5, true); _cannon_id = value; }
			}
			public bool HasCannon_id {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _time; // tag 6
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (6, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (6); }
			}

			private List<fish> _frozen_fishes; // tag 7
			public List<fish> frozen_fishes {
				get { return _frozen_fishes; }
				set { base.has_field.set_field (7, true); _frozen_fishes = value; }
			}
			public bool HasFrozen_fishes {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _cd_time; // tag 8
			public Int64 cd_time {
				get { return _cd_time; }
				set { base.has_field.set_field (8, true); _cd_time = value; }
			}
			public bool HasCd_time {
				get { return base.has_field.has_field (8); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.skill_type = base.deserialize.read_integer ();
						break;
					case 2:
						this.tag_ids = base.deserialize.read_integer_list ();
						break;
					case 3:
						this.is_first = base.deserialize.read_integer ();
						break;
					case 4:
						this.add_speed = base.deserialize.read_integer ();
						break;
					case 5:
						this.cannon_id = base.deserialize.read_integer ();
						break;
					case 6:
						this.time = base.deserialize.read_integer ();
						break;
					case 7:
						this.frozen_fishes = base.deserialize.read_obj_list<fish> ();
						break;
					case 8:
						this.cd_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.skill_type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.tag_ids, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.is_first, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.add_speed, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.cannon_id, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.time, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_obj (this.frozen_fishes, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.cd_time, 8);
				}

				return base.serialize.close ();
			}
		}


	}


	public class sync_skill_end {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _skill_type; // tag 1
			public Int64 skill_type {
				get { return _skill_type; }
				set { base.has_field.set_field (1, true); _skill_type = value; }
			}
			public bool HasSkill_type {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.skill_type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.skill_type, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class sync_vip_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _vip; // tag 0
			public Int64 vip {
				get { return _vip; }
				set { base.has_field.set_field (0, true); _vip = value; }
			}
			public bool HasVip {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _process; // tag 1
			public Int64 process {
				get { return _process; }
				set { base.has_field.set_field (1, true); _process = value; }
			}
			public bool HasProcess {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _maximum; // tag 2
			public Int64 maximum {
				get { return _maximum; }
				set { base.has_field.set_field (2, true); _maximum = value; }
			}
			public bool HasMaximum {
				get { return base.has_field.has_field (2); }
			}

			private bool _promoted; // tag 3
			public bool promoted {
				get { return _promoted; }
				set { base.has_field.set_field (3, true); _promoted = value; }
			}
			public bool HasPromoted {
				get { return base.has_field.has_field (3); }
			}

			private List<prop> _rewards; // tag 4
			public List<prop> rewards {
				get { return _rewards; }
				set { base.has_field.set_field (4, true); _rewards = value; }
			}
			public bool HasRewards {
				get { return base.has_field.has_field (4); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.vip = base.deserialize.read_integer ();
						break;
					case 1:
						this.process = base.deserialize.read_integer ();
						break;
					case 2:
						this.maximum = base.deserialize.read_integer ();
						break;
					case 3:
						this.promoted = base.deserialize.read_boolean ();
						break;
					case 4:
						this.rewards = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.vip, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.process, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.maximum, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_boolean (this.promoted, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_obj (this.rewards, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class tab_item : SprotoTypeBase {
		private static int max_field_count = 7;
		
		
		private Int64 _push_type; // tag 0
		public Int64 push_type {
			get { return _push_type; }
			set { base.has_field.set_field (0, true); _push_type = value; }
		}
		public bool HasPush_type {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _id; // tag 1
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (1, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (1); }
		}

		private string _tab_name; // tag 2
		public string tab_name {
			get { return _tab_name; }
			set { base.has_field.set_field (2, true); _tab_name = value; }
		}
		public bool HasTab_name {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _tab_sort; // tag 3
		public Int64 tab_sort {
			get { return _tab_sort; }
			set { base.has_field.set_field (3, true); _tab_sort = value; }
		}
		public bool HasTab_sort {
			get { return base.has_field.has_field (3); }
		}

		private string _tab_name_colour; // tag 4
		public string tab_name_colour {
			get { return _tab_name_colour; }
			set { base.has_field.set_field (4, true); _tab_name_colour = value; }
		}
		public bool HasTab_name_colour {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _biz_id; // tag 5
		public Int64 biz_id {
			get { return _biz_id; }
			set { base.has_field.set_field (5, true); _biz_id = value; }
		}
		public bool HasBiz_id {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _min_consume_num; // tag 6
		public Int64 min_consume_num {
			get { return _min_consume_num; }
			set { base.has_field.set_field (6, true); _min_consume_num = value; }
		}
		public bool HasMin_consume_num {
			get { return base.has_field.has_field (6); }
		}

		public tab_item () : base(max_field_count) {}

		public tab_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.push_type = base.deserialize.read_integer ();
					break;
				case 1:
					this.id = base.deserialize.read_integer ();
					break;
				case 2:
					this.tab_name = base.deserialize.read_string ();
					break;
				case 3:
					this.tab_sort = base.deserialize.read_integer ();
					break;
				case 4:
					this.tab_name_colour = base.deserialize.read_string ();
					break;
				case 5:
					this.biz_id = base.deserialize.read_integer ();
					break;
				case 6:
					this.min_consume_num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.push_type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.tab_name, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.tab_sort, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.tab_name_colour, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.biz_id, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.min_consume_num, 6);
			}

			return base.serialize.close ();
		}
	}


	public class table_fire {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private string _rot; // tag 1
			public string rot {
				get { return _rot; }
				set { base.has_field.set_field (1, true); _rot = value; }
			}
			public bool HasRot {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.rot = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.rot, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class table_fish_net {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 11;
			
			
			private string _uid; // tag 1
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private List<victim> _fishes; // tag 2
			public List<victim> fishes {
				get { return _fishes; }
				set { base.has_field.set_field (1, true); _fishes = value; }
			}
			public bool HasFishes {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _factor; // tag 3
			public Int64 factor {
				get { return _factor; }
				set { base.has_field.set_field (2, true); _factor = value; }
			}
			public bool HasFactor {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _silo_award; // tag 4
			public Int64 silo_award {
				get { return _silo_award; }
				set { base.has_field.set_field (3, true); _silo_award = value; }
			}
			public bool HasSilo_award {
				get { return base.has_field.has_field (3); }
			}

			private string _total_gold; // tag 5
			public string total_gold {
				get { return _total_gold; }
				set { base.has_field.set_field (4, true); _total_gold = value; }
			}
			public bool HasTotal_gold {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _total_exp; // tag 6
			public Int64 total_exp {
				get { return _total_exp; }
				set { base.has_field.set_field (5, true); _total_exp = value; }
			}
			public bool HasTotal_exp {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _func_id; // tag 7
			public Int64 func_id {
				get { return _func_id; }
				set { base.has_field.set_field (6, true); _func_id = value; }
			}
			public bool HasFunc_id {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _net_id; // tag 8
			public Int64 net_id {
				get { return _net_id; }
				set { base.has_field.set_field (7, true); _net_id = value; }
			}
			public bool HasNet_id {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _total_diamond; // tag 9
			public Int64 total_diamond {
				get { return _total_diamond; }
				set { base.has_field.set_field (8, true); _total_diamond = value; }
			}
			public bool HasTotal_diamond {
				get { return base.has_field.has_field (8); }
			}

			private Int64 _special_fish_left_gold; // tag 10
			public Int64 special_fish_left_gold {
				get { return _special_fish_left_gold; }
				set { base.has_field.set_field (9, true); _special_fish_left_gold = value; }
			}
			public bool HasSpecial_fish_left_gold {
				get { return base.has_field.has_field (9); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 1:
						this.uid = base.deserialize.read_string ();
						break;
					case 2:
						this.fishes = base.deserialize.read_obj_list<victim> ();
						break;
					case 3:
						this.factor = base.deserialize.read_integer ();
						break;
					case 4:
						this.silo_award = base.deserialize.read_integer ();
						break;
					case 5:
						this.total_gold = base.deserialize.read_string ();
						break;
					case 6:
						this.total_exp = base.deserialize.read_integer ();
						break;
					case 7:
						this.func_id = base.deserialize.read_integer ();
						break;
					case 8:
						this.net_id = base.deserialize.read_integer ();
						break;
					case 9:
						this.total_diamond = base.deserialize.read_integer ();
						break;
					case 10:
						this.special_fish_left_gold = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 1);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.fishes, 2);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.factor, 3);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.silo_award, 4);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.total_gold, 5);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.total_exp, 6);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.func_id, 7);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.net_id, 8);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.total_diamond, 9);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_integer (this.special_fish_left_gold, 10);
				}

				return base.serialize.close ();
			}
		}


	}


	public class table_player_sit_down {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 20;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _chair_id; // tag 1
			public Int64 chair_id {
				get { return _chair_id; }
				set { base.has_field.set_field (1, true); _chair_id = value; }
			}
			public bool HasChair_id {
				get { return base.has_field.has_field (1); }
			}

			private string _gold; // tag 2
			public string gold {
				get { return _gold; }
				set { base.has_field.set_field (2, true); _gold = value; }
			}
			public bool HasGold {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _level; // tag 3
			public Int64 level {
				get { return _level; }
				set { base.has_field.set_field (3, true); _level = value; }
			}
			public bool HasLevel {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _gender; // tag 4
			public Int64 gender {
				get { return _gender; }
				set { base.has_field.set_field (4, true); _gender = value; }
			}
			public bool HasGender {
				get { return base.has_field.has_field (4); }
			}

			private string _nickname; // tag 5
			public string nickname {
				get { return _nickname; }
				set { base.has_field.set_field (5, true); _nickname = value; }
			}
			public bool HasNickname {
				get { return base.has_field.has_field (5); }
			}

			private string _img_url; // tag 6
			public string img_url {
				get { return _img_url; }
				set { base.has_field.set_field (6, true); _img_url = value; }
			}
			public bool HasImg_url {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _diamond; // tag 7
			public Int64 diamond {
				get { return _diamond; }
				set { base.has_field.set_field (7, true); _diamond = value; }
			}
			public bool HasDiamond {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _unlock_battery; // tag 8
			public Int64 unlock_battery {
				get { return _unlock_battery; }
				set { base.has_field.set_field (8, true); _unlock_battery = value; }
			}
			public bool HasUnlock_battery {
				get { return base.has_field.has_field (8); }
			}

			private Int64 _using_cannon; // tag 9
			public Int64 using_cannon {
				get { return _using_cannon; }
				set { base.has_field.set_field (9, true); _using_cannon = value; }
			}
			public bool HasUsing_cannon {
				get { return base.has_field.has_field (9); }
			}

			private Int64 _using_cannon_multiple; // tag 10
			public Int64 using_cannon_multiple {
				get { return _using_cannon_multiple; }
				set { base.has_field.set_field (10, true); _using_cannon_multiple = value; }
			}
			public bool HasUsing_cannon_multiple {
				get { return base.has_field.has_field (10); }
			}

			private bool _is_bankruptcy; // tag 11
			public bool is_bankruptcy {
				get { return _is_bankruptcy; }
				set { base.has_field.set_field (11, true); _is_bankruptcy = value; }
			}
			public bool HasIs_bankruptcy {
				get { return base.has_field.has_field (11); }
			}

			private Int64 _vip_level; // tag 12
			public Int64 vip_level {
				get { return _vip_level; }
				set { base.has_field.set_field (12, true); _vip_level = value; }
			}
			public bool HasVip_level {
				get { return base.has_field.has_field (12); }
			}

			private List<prop> _items; // tag 13
			public List<prop> items {
				get { return _items; }
				set { base.has_field.set_field (13, true); _items = value; }
			}
			public bool HasItems {
				get { return base.has_field.has_field (13); }
			}

			private Int64 _account_id; // tag 14
			public Int64 account_id {
				get { return _account_id; }
				set { base.has_field.set_field (14, true); _account_id = value; }
			}
			public bool HasAccount_id {
				get { return base.has_field.has_field (14); }
			}

			private Int64 _score; // tag 15
			public Int64 score {
				get { return _score; }
				set { base.has_field.set_field (15, true); _score = value; }
			}
			public bool HasScore {
				get { return base.has_field.has_field (15); }
			}

			private Int64 _icon_box_id; // tag 16
			public Int64 icon_box_id {
				get { return _icon_box_id; }
				set { base.has_field.set_field (16, true); _icon_box_id = value; }
			}
			public bool HasIcon_box_id {
				get { return base.has_field.has_field (16); }
			}

			private Int64 _current_money_border_id; // tag 17
			public Int64 current_money_border_id {
				get { return _current_money_border_id; }
				set { base.has_field.set_field (17, true); _current_money_border_id = value; }
			}
			public bool HasCurrent_money_border_id {
				get { return base.has_field.has_field (17); }
			}

			private battery_skill _battery_skill; // tag 20
			public battery_skill battery_skill {
				get { return _battery_skill; }
				set { base.has_field.set_field (18, true); _battery_skill = value; }
			}
			public bool HasBattery_skill {
				get { return base.has_field.has_field (18); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.chair_id = base.deserialize.read_integer ();
						break;
					case 2:
						this.gold = base.deserialize.read_string ();
						break;
					case 3:
						this.level = base.deserialize.read_integer ();
						break;
					case 4:
						this.gender = base.deserialize.read_integer ();
						break;
					case 5:
						this.nickname = base.deserialize.read_string ();
						break;
					case 6:
						this.img_url = base.deserialize.read_string ();
						break;
					case 7:
						this.diamond = base.deserialize.read_integer ();
						break;
					case 8:
						this.unlock_battery = base.deserialize.read_integer ();
						break;
					case 9:
						this.using_cannon = base.deserialize.read_integer ();
						break;
					case 10:
						this.using_cannon_multiple = base.deserialize.read_integer ();
						break;
					case 11:
						this.is_bankruptcy = base.deserialize.read_boolean ();
						break;
					case 12:
						this.vip_level = base.deserialize.read_integer ();
						break;
					case 13:
						this.items = base.deserialize.read_obj_list<prop> ();
						break;
					case 14:
						this.account_id = base.deserialize.read_integer ();
						break;
					case 15:
						this.score = base.deserialize.read_integer ();
						break;
					case 16:
						this.icon_box_id = base.deserialize.read_integer ();
						break;
					case 17:
						this.current_money_border_id = base.deserialize.read_integer ();
						break;
					case 20:
						this.battery_skill = base.deserialize.read_obj<battery_skill> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.chair_id, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.gold, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.level, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.gender, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_string (this.nickname, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_string (this.img_url, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.diamond, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.unlock_battery, 8);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_integer (this.using_cannon, 9);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_integer (this.using_cannon_multiple, 10);
				}

				if (base.has_field.has_field (11)) {
					base.serialize.write_boolean (this.is_bankruptcy, 11);
				}

				if (base.has_field.has_field (12)) {
					base.serialize.write_integer (this.vip_level, 12);
				}

				if (base.has_field.has_field (13)) {
					base.serialize.write_obj (this.items, 13);
				}

				if (base.has_field.has_field (14)) {
					base.serialize.write_integer (this.account_id, 14);
				}

				if (base.has_field.has_field (15)) {
					base.serialize.write_integer (this.score, 15);
				}

				if (base.has_field.has_field (16)) {
					base.serialize.write_integer (this.icon_box_id, 16);
				}

				if (base.has_field.has_field (17)) {
					base.serialize.write_integer (this.current_money_border_id, 17);
				}

				if (base.has_field.has_field (18)) {
					base.serialize.write_obj (this.battery_skill, 20);
				}

				return base.serialize.close ();
			}
		}


	}


	public class table_player_stand_up {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _chair_id; // tag 1
			public Int64 chair_id {
				get { return _chair_id; }
				set { base.has_field.set_field (1, true); _chair_id = value; }
			}
			public bool HasChair_id {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.chair_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.chair_id, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class table_sync_event {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private List<fire_event> _fires; // tag 1
			public List<fire_event> fires {
				get { return _fires; }
				set { base.has_field.set_field (1, true); _fires = value; }
			}
			public bool HasFires {
				get { return base.has_field.has_field (1); }
			}

			private List<fish_net_event> _fish_nets; // tag 2
			public List<fish_net_event> fish_nets {
				get { return _fish_nets; }
				set { base.has_field.set_field (2, true); _fish_nets = value; }
			}
			public bool HasFish_nets {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _interval; // tag 3
			public Int64 interval {
				get { return _interval; }
				set { base.has_field.set_field (3, true); _interval = value; }
			}
			public bool HasInterval {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.fires = base.deserialize.read_obj_list<fire_event> ();
						break;
					case 2:
						this.fish_nets = base.deserialize.read_obj_list<fish_net_event> ();
						break;
					case 3:
						this.interval = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.fires, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.fish_nets, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.interval, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class task_common_item : SprotoTypeBase {
		private static int max_field_count = 6;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _task_id; // tag 1
		public Int64 task_id {
			get { return _task_id; }
			set { base.has_field.set_field (1, true); _task_id = value; }
		}
		public bool HasTask_id {
			get { return base.has_field.has_field (1); }
		}

		private string _task_name; // tag 2
		public string task_name {
			get { return _task_name; }
			set { base.has_field.set_field (2, true); _task_name = value; }
		}
		public bool HasTask_name {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _is_close; // tag 3
		public Int64 is_close {
			get { return _is_close; }
			set { base.has_field.set_field (3, true); _is_close = value; }
		}
		public bool HasIs_close {
			get { return base.has_field.has_field (3); }
		}

		private cond _complete_condition; // tag 4
		public cond complete_condition {
			get { return _complete_condition; }
			set { base.has_field.set_field (4, true); _complete_condition = value; }
		}
		public bool HasComplete_condition {
			get { return base.has_field.has_field (4); }
		}

		private string _task_picture; // tag 5
		public string task_picture {
			get { return _task_picture; }
			set { base.has_field.set_field (5, true); _task_picture = value; }
		}
		public bool HasTask_picture {
			get { return base.has_field.has_field (5); }
		}

		public task_common_item () : base(max_field_count) {}

		public task_common_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.task_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.task_name = base.deserialize.read_string ();
					break;
				case 3:
					this.is_close = base.deserialize.read_integer ();
					break;
				case 4:
					this.complete_condition = base.deserialize.read_obj<cond> ();
					break;
				case 5:
					this.task_picture = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.task_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.task_name, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.is_close, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_obj (this.complete_condition, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.task_picture, 5);
			}

			return base.serialize.close ();
		}
	}


	public class task_info : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _status; // tag 1
		public Int64 status {
			get { return _status; }
			set { base.has_field.set_field (1, true); _status = value; }
		}
		public bool HasStatus {
			get { return base.has_field.has_field (1); }
		}

		private List<reach_cond> _cond_list; // tag 2
		public List<reach_cond> cond_list {
			get { return _cond_list; }
			set { base.has_field.set_field (2, true); _cond_list = value; }
		}
		public bool HasCond_list {
			get { return base.has_field.has_field (2); }
		}

		public task_info () : base(max_field_count) {}

		public task_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.status = base.deserialize.read_integer ();
					break;
				case 2:
					this.cond_list = base.deserialize.read_obj_list<reach_cond> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.status, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_obj (this.cond_list, 2);
			}

			return base.serialize.close ();
		}
	}


	public class task_item : SprotoTypeBase {
		private static int max_field_count = 19;
		
		
		private Int64 _push_type; // tag 0
		public Int64 push_type {
			get { return _push_type; }
			set { base.has_field.set_field (0, true); _push_type = value; }
		}
		public bool HasPush_type {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _id; // tag 1
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (1, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _task_id; // tag 2
		public Int64 task_id {
			get { return _task_id; }
			set { base.has_field.set_field (2, true); _task_id = value; }
		}
		public bool HasTask_id {
			get { return base.has_field.has_field (2); }
		}

		private string _Name; // tag 3
		public string Name {
			get { return _Name; }
			set { base.has_field.set_field (3, true); _Name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (3); }
		}

		private string _Summary; // tag 4
		public string Summary {
			get { return _Summary; }
			set { base.has_field.set_field (4, true); _Summary = value; }
		}
		public bool HasSummary {
			get { return base.has_field.has_field (4); }
		}

		private List<cond> _Complete_condition; // tag 5
		public List<cond> Complete_condition {
			get { return _Complete_condition; }
			set { base.has_field.set_field (5, true); _Complete_condition = value; }
		}
		public bool HasComplete_condition {
			get { return base.has_field.has_field (5); }
		}

		private string _MissionImage; // tag 6
		public string MissionImage {
			get { return _MissionImage; }
			set { base.has_field.set_field (6, true); _MissionImage = value; }
		}
		public bool HasMissionImage {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _Link; // tag 7
		public Int64 Link {
			get { return _Link; }
			set { base.has_field.set_field (7, true); _Link = value; }
		}
		public bool HasLink {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _Type; // tag 8
		public Int64 Type {
			get { return _Type; }
			set { base.has_field.set_field (8, true); _Type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _IsUnlock; // tag 9
		public Int64 IsUnlock {
			get { return _IsUnlock; }
			set { base.has_field.set_field (9, true); _IsUnlock = value; }
		}
		public bool HasIsUnlock {
			get { return base.has_field.has_field (9); }
		}

		private List<prop> _Rewards; // tag 10
		public List<prop> Rewards {
			get { return _Rewards; }
			set { base.has_field.set_field (10, true); _Rewards = value; }
		}
		public bool HasRewards {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _Liveness; // tag 11
		public Int64 Liveness {
			get { return _Liveness; }
			set { base.has_field.set_field (11, true); _Liveness = value; }
		}
		public bool HasLiveness {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _Sort; // tag 12
		public Int64 Sort {
			get { return _Sort; }
			set { base.has_field.set_field (12, true); _Sort = value; }
		}
		public bool HasSort {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _next; // tag 13
		public Int64 next {
			get { return _next; }
			set { base.has_field.set_field (13, true); _next = value; }
		}
		public bool HasNext {
			get { return base.has_field.has_field (13); }
		}

		private Int64 _is_first; // tag 14
		public Int64 is_first {
			get { return _is_first; }
			set { base.has_field.set_field (14, true); _is_first = value; }
		}
		public bool HasIs_first {
			get { return base.has_field.has_field (14); }
		}

		private Int64 _guide_id; // tag 15
		public Int64 guide_id {
			get { return _guide_id; }
			set { base.has_field.set_field (15, true); _guide_id = value; }
		}
		public bool HasGuide_id {
			get { return base.has_field.has_field (15); }
		}

		private Int64 _room_id; // tag 16
		public Int64 room_id {
			get { return _room_id; }
			set { base.has_field.set_field (16, true); _room_id = value; }
		}
		public bool HasRoom_id {
			get { return base.has_field.has_field (16); }
		}

		private string _min_ver; // tag 17
		public string min_ver {
			get { return _min_ver; }
			set { base.has_field.set_field (17, true); _min_ver = value; }
		}
		public bool HasMin_ver {
			get { return base.has_field.has_field (17); }
		}

		private Int64 _type_receive_reward; // tag 18
		public Int64 type_receive_reward {
			get { return _type_receive_reward; }
			set { base.has_field.set_field (18, true); _type_receive_reward = value; }
		}
		public bool HasType_receive_reward {
			get { return base.has_field.has_field (18); }
		}

		public task_item () : base(max_field_count) {}

		public task_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.push_type = base.deserialize.read_integer ();
					break;
				case 1:
					this.id = base.deserialize.read_integer ();
					break;
				case 2:
					this.task_id = base.deserialize.read_integer ();
					break;
				case 3:
					this.Name = base.deserialize.read_string ();
					break;
				case 4:
					this.Summary = base.deserialize.read_string ();
					break;
				case 5:
					this.Complete_condition = base.deserialize.read_obj_list<cond> ();
					break;
				case 6:
					this.MissionImage = base.deserialize.read_string ();
					break;
				case 7:
					this.Link = base.deserialize.read_integer ();
					break;
				case 8:
					this.Type = base.deserialize.read_integer ();
					break;
				case 9:
					this.IsUnlock = base.deserialize.read_integer ();
					break;
				case 10:
					this.Rewards = base.deserialize.read_obj_list<prop> ();
					break;
				case 11:
					this.Liveness = base.deserialize.read_integer ();
					break;
				case 12:
					this.Sort = base.deserialize.read_integer ();
					break;
				case 13:
					this.next = base.deserialize.read_integer ();
					break;
				case 14:
					this.is_first = base.deserialize.read_integer ();
					break;
				case 15:
					this.guide_id = base.deserialize.read_integer ();
					break;
				case 16:
					this.room_id = base.deserialize.read_integer ();
					break;
				case 17:
					this.min_ver = base.deserialize.read_string ();
					break;
				case 18:
					this.type_receive_reward = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.push_type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.task_id, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.Name, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.Summary, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_obj (this.Complete_condition, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.MissionImage, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.Link, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.Type, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.IsUnlock, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_obj (this.Rewards, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.Liveness, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.Sort, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.next, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_integer (this.is_first, 14);
			}

			if (base.has_field.has_field (15)) {
				base.serialize.write_integer (this.guide_id, 15);
			}

			if (base.has_field.has_field (16)) {
				base.serialize.write_integer (this.room_id, 16);
			}

			if (base.has_field.has_field (17)) {
				base.serialize.write_string (this.min_ver, 17);
			}

			if (base.has_field.has_field (18)) {
				base.serialize.write_integer (this.type_receive_reward, 18);
			}

			return base.serialize.close ();
		}
	}


	public class task_off_reward_item : SprotoTypeBase {
		private static int max_field_count = 10;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _room_id; // tag 1
		public Int64 room_id {
			get { return _room_id; }
			set { base.has_field.set_field (1, true); _room_id = value; }
		}
		public bool HasRoom_id {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _fish_format_id; // tag 2
		public Int64 fish_format_id {
			get { return _fish_format_id; }
			set { base.has_field.set_field (2, true); _fish_format_id = value; }
		}
		public bool HasFish_format_id {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _type; // tag 3
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (3, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _time; // tag 4
		public Int64 time {
			get { return _time; }
			set { base.has_field.set_field (4, true); _time = value; }
		}
		public bool HasTime {
			get { return base.has_field.has_field (4); }
		}

		private List<Int64> _task_id_list; // tag 5
		public List<Int64> task_id_list {
			get { return _task_id_list; }
			set { base.has_field.set_field (5, true); _task_id_list = value; }
		}
		public bool HasTask_id_list {
			get { return base.has_field.has_field (5); }
		}

		private List<prop> _rewards; // tag 6
		public List<prop> rewards {
			get { return _rewards; }
			set { base.has_field.set_field (6, true); _rewards = value; }
		}
		public bool HasRewards {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _end_type; // tag 7
		public Int64 end_type {
			get { return _end_type; }
			set { base.has_field.set_field (7, true); _end_type = value; }
		}
		public bool HasEnd_type {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _show_score; // tag 8
		public Int64 show_score {
			get { return _show_score; }
			set { base.has_field.set_field (8, true); _show_score = value; }
		}
		public bool HasShow_score {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _ready_time_start; // tag 9
		public Int64 ready_time_start {
			get { return _ready_time_start; }
			set { base.has_field.set_field (9, true); _ready_time_start = value; }
		}
		public bool HasReady_time_start {
			get { return base.has_field.has_field (9); }
		}

		public task_off_reward_item () : base(max_field_count) {}

		public task_off_reward_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.room_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.fish_format_id = base.deserialize.read_integer ();
					break;
				case 3:
					this.type = base.deserialize.read_integer ();
					break;
				case 4:
					this.time = base.deserialize.read_integer ();
					break;
				case 5:
					this.task_id_list = base.deserialize.read_integer_list ();
					break;
				case 6:
					this.rewards = base.deserialize.read_obj_list<prop> ();
					break;
				case 7:
					this.end_type = base.deserialize.read_integer ();
					break;
				case 8:
					this.show_score = base.deserialize.read_integer ();
					break;
				case 9:
					this.ready_time_start = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.room_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.fish_format_id, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.type, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.time, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.task_id_list, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_obj (this.rewards, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.end_type, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.show_score, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.ready_time_start, 9);
			}

			return base.serialize.close ();
		}
	}


	public class user_level_up {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _level; // tag 0
			public Int64 level {
				get { return _level; }
				set { base.has_field.set_field (0, true); _level = value; }
			}
			public bool HasLevel {
				get { return base.has_field.has_field (0); }
			}

			private List<prop> _rewards; // tag 1
			public List<prop> rewards {
				get { return _rewards; }
				set { base.has_field.set_field (1, true); _rewards = value; }
			}
			public bool HasRewards {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _total_diamond; // tag 2
			public Int64 total_diamond {
				get { return _total_diamond; }
				set { base.has_field.set_field (2, true); _total_diamond = value; }
			}
			public bool HasTotal_diamond {
				get { return base.has_field.has_field (2); }
			}

			private string _total_gold; // tag 3
			public string total_gold {
				get { return _total_gold; }
				set { base.has_field.set_field (3, true); _total_gold = value; }
			}
			public bool HasTotal_gold {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.level = base.deserialize.read_integer ();
						break;
					case 1:
						this.rewards = base.deserialize.read_obj_list<prop> ();
						break;
					case 2:
						this.total_diamond = base.deserialize.read_integer ();
						break;
					case 3:
						this.total_gold = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.level, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.rewards, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.total_diamond, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.total_gold, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class victim : SprotoTypeBase {
		private static int max_field_count = 11;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _tag_id; // tag 1
		public Int64 tag_id {
			get { return _tag_id; }
			set { base.has_field.set_field (1, true); _tag_id = value; }
		}
		public bool HasTag_id {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _score; // tag 2
		public Int64 score {
			get { return _score; }
			set { base.has_field.set_field (2, true); _score = value; }
		}
		public bool HasScore {
			get { return base.has_field.has_field (2); }
		}

		private List<prop> _items; // tag 3
		public List<prop> items {
			get { return _items; }
			set { base.has_field.set_field (3, true); _items = value; }
		}
		public bool HasItems {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _func_id; // tag 4
		public Int64 func_id {
			get { return _func_id; }
			set { base.has_field.set_field (4, true); _func_id = value; }
		}
		public bool HasFunc_id {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _net_id; // tag 5
		public Int64 net_id {
			get { return _net_id; }
			set { base.has_field.set_field (5, true); _net_id = value; }
		}
		public bool HasNet_id {
			get { return base.has_field.has_field (5); }
		}

		private List<Int64> _factor_list; // tag 6
		public List<Int64> factor_list {
			get { return _factor_list; }
			set { base.has_field.set_field (6, true); _factor_list = value; }
		}
		public bool HasFactor_list {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _slots_score; // tag 7
		public Int64 slots_score {
			get { return _slots_score; }
			set { base.has_field.set_field (7, true); _slots_score = value; }
		}
		public bool HasSlots_score {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _crit_gold; // tag 8
		public Int64 crit_gold {
			get { return _crit_gold; }
			set { base.has_field.set_field (8, true); _crit_gold = value; }
		}
		public bool HasCrit_gold {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _must_show_num; // tag 9
		public Int64 must_show_num {
			get { return _must_show_num; }
			set { base.has_field.set_field (9, true); _must_show_num = value; }
		}
		public bool HasMust_show_num {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _special_fish_status; // tag 10
		public Int64 special_fish_status {
			get { return _special_fish_status; }
			set { base.has_field.set_field (10, true); _special_fish_status = value; }
		}
		public bool HasSpecial_fish_status {
			get { return base.has_field.has_field (10); }
		}

		public victim () : base(max_field_count) {}

		public victim (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.tag_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.score = base.deserialize.read_integer ();
					break;
				case 3:
					this.items = base.deserialize.read_obj_list<prop> ();
					break;
				case 4:
					this.func_id = base.deserialize.read_integer ();
					break;
				case 5:
					this.net_id = base.deserialize.read_integer ();
					break;
				case 6:
					this.factor_list = base.deserialize.read_integer_list ();
					break;
				case 7:
					this.slots_score = base.deserialize.read_integer ();
					break;
				case 8:
					this.crit_gold = base.deserialize.read_integer ();
					break;
				case 9:
					this.must_show_num = base.deserialize.read_integer ();
					break;
				case 10:
					this.special_fish_status = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.tag_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.score, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_obj (this.items, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.func_id, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.net_id, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.factor_list, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.slots_score, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.crit_gold, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.must_show_num, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.special_fish_status, 10);
			}

			return base.serialize.close ();
		}
	}


}


public class ServerProtocol : ProtocolBase {
	public static  ServerProtocol Instance = new ServerProtocol();
	private ServerProtocol() {
		Protocol.SetProtocol<change_cannon> (change_cannon.Tag);
		Protocol.SetRequest<ServerSprotoType.change_cannon.request> (change_cannon.Tag);

		Protocol.SetProtocol<change_table_status> (change_table_status.Tag);
		Protocol.SetRequest<ServerSprotoType.change_table_status.request> (change_table_status.Tag);

		Protocol.SetProtocol<delete_mail> (delete_mail.Tag);
		Protocol.SetRequest<ServerSprotoType.delete_mail.request> (delete_mail.Tag);

		Protocol.SetProtocol<game_activity_list> (game_activity_list.Tag);
		Protocol.SetRequest<ServerSprotoType.game_activity_list.request> (game_activity_list.Tag);

		Protocol.SetProtocol<game_broadcast_info> (game_broadcast_info.Tag);
		Protocol.SetRequest<ServerSprotoType.game_broadcast_info.request> (game_broadcast_info.Tag);

		Protocol.SetProtocol<game_notice_info> (game_notice_info.Tag);
		Protocol.SetRequest<ServerSprotoType.game_notice_info.request> (game_notice_info.Tag);

		Protocol.SetProtocol<heartbeat> (heartbeat.Tag);

		Protocol.SetProtocol<kick_user> (kick_user.Tag);
		Protocol.SetRequest<ServerSprotoType.kick_user.request> (kick_user.Tag);

		Protocol.SetProtocol<login_queue_wait> (login_queue_wait.Tag);
		Protocol.SetRequest<ServerSprotoType.login_queue_wait.request> (login_queue_wait.Tag);

		Protocol.SetProtocol<mail_list> (mail_list.Tag);
		Protocol.SetRequest<ServerSprotoType.mail_list.request> (mail_list.Tag);

		Protocol.SetProtocol<notice> (notice.Tag);
		Protocol.SetRequest<ServerSprotoType.notice.request> (notice.Tag);

		Protocol.SetProtocol<popup_msg> (popup_msg.Tag);
		Protocol.SetRequest<ServerSprotoType.popup_msg.request> (popup_msg.Tag);

		Protocol.SetProtocol<push_changed_equipment> (push_changed_equipment.Tag);
		Protocol.SetRequest<ServerSprotoType.push_changed_equipment.request> (push_changed_equipment.Tag);

		Protocol.SetProtocol<push_changed_task> (push_changed_task.Tag);
		Protocol.SetRequest<ServerSprotoType.push_changed_task.request> (push_changed_task.Tag);

		Protocol.SetProtocol<push_prop_change> (push_prop_change.Tag);
		Protocol.SetRequest<ServerSprotoType.push_prop_change.request> (push_prop_change.Tag);

		Protocol.SetProtocol<push_removed_task> (push_removed_task.Tag);
		Protocol.SetRequest<ServerSprotoType.push_removed_task.request> (push_removed_task.Tag);

		Protocol.SetProtocol<push_skill_info> (push_skill_info.Tag);
		Protocol.SetRequest<ServerSprotoType.push_skill_info.request> (push_skill_info.Tag);

		Protocol.SetProtocol<push_tb_cfg> (push_tb_cfg.Tag);
		Protocol.SetRequest<ServerSprotoType.push_tb_cfg.request> (push_tb_cfg.Tag);

		Protocol.SetProtocol<push_whole_point_day> (push_whole_point_day.Tag);
		Protocol.SetRequest<ServerSprotoType.push_whole_point_day.request> (push_whole_point_day.Tag);

		Protocol.SetProtocol<room_kick_user> (room_kick_user.Tag);
		Protocol.SetRequest<ServerSprotoType.room_kick_user.request> (room_kick_user.Tag);

		Protocol.SetProtocol<small_game_end> (small_game_end.Tag);
		Protocol.SetRequest<ServerSprotoType.small_game_end.request> (small_game_end.Tag);

		Protocol.SetProtocol<small_game_return> (small_game_return.Tag);
		Protocol.SetRequest<ServerSprotoType.small_game_return.request> (small_game_return.Tag);

		Protocol.SetProtocol<small_game_start> (small_game_start.Tag);
		Protocol.SetRequest<ServerSprotoType.small_game_start.request> (small_game_start.Tag);

		Protocol.SetProtocol<switch_cannon> (switch_cannon.Tag);
		Protocol.SetRequest<ServerSprotoType.switch_cannon.request> (switch_cannon.Tag);

		Protocol.SetProtocol<sync_skill_effect> (sync_skill_effect.Tag);
		Protocol.SetRequest<ServerSprotoType.sync_skill_effect.request> (sync_skill_effect.Tag);

		Protocol.SetProtocol<sync_skill_end> (sync_skill_end.Tag);
		Protocol.SetRequest<ServerSprotoType.sync_skill_end.request> (sync_skill_end.Tag);

		Protocol.SetProtocol<sync_vip_info> (sync_vip_info.Tag);
		Protocol.SetRequest<ServerSprotoType.sync_vip_info.request> (sync_vip_info.Tag);

		Protocol.SetProtocol<table_fire> (table_fire.Tag);
		Protocol.SetRequest<ServerSprotoType.table_fire.request> (table_fire.Tag);

		Protocol.SetProtocol<table_fish_net> (table_fish_net.Tag);
		Protocol.SetRequest<ServerSprotoType.table_fish_net.request> (table_fish_net.Tag);

		Protocol.SetProtocol<table_player_sit_down> (table_player_sit_down.Tag);
		Protocol.SetRequest<ServerSprotoType.table_player_sit_down.request> (table_player_sit_down.Tag);

		Protocol.SetProtocol<table_player_stand_up> (table_player_stand_up.Tag);
		Protocol.SetRequest<ServerSprotoType.table_player_stand_up.request> (table_player_stand_up.Tag);

		Protocol.SetProtocol<table_sync_event> (table_sync_event.Tag);
		Protocol.SetRequest<ServerSprotoType.table_sync_event.request> (table_sync_event.Tag);

		Protocol.SetProtocol<user_level_up> (user_level_up.Tag);
		Protocol.SetRequest<ServerSprotoType.user_level_up.request> (user_level_up.Tag);

	}

	public class change_cannon {
		public const int Tag = 31;
	}

	public class change_table_status {
		public const int Tag = 84;
	}

	public class delete_mail {
		public const int Tag = 90;
	}

	public class game_activity_list {
		public const int Tag = 36;
	}

	public class game_broadcast_info {
		public const int Tag = 35;
	}

	public class game_notice_info {
		public const int Tag = 164;
	}

	public class heartbeat {
		public const int Tag = 1;
	}

	public class kick_user {
		public const int Tag = 9;
	}

	public class login_queue_wait {
		public const int Tag = 11;
	}

	public class mail_list {
		public const int Tag = 18;
	}

	public class notice {
		public const int Tag = 28;
	}

	public class popup_msg {
		public const int Tag = 89;
	}

	public class push_changed_equipment {
		public const int Tag = 58;
	}

	public class push_changed_task {
		public const int Tag = 5;
	}

	public class push_prop_change {
		public const int Tag = 107;
	}

	public class push_removed_task {
		public const int Tag = 70;
	}

	public class push_skill_info {
		public const int Tag = 56;
	}

	public class push_tb_cfg {
		public const int Tag = 114;
	}

	public class push_whole_point_day {
		public const int Tag = 103;
	}

	public class room_kick_user {
		public const int Tag = 88;
	}

	public class small_game_end {
		public const int Tag = 96;
	}

	public class small_game_return {
		public const int Tag = 98;
	}

	public class small_game_start {
		public const int Tag = 95;
	}

	public class switch_cannon {
		public const int Tag = 30;
	}

	public class sync_skill_effect {
		public const int Tag = 24;
	}

	public class sync_skill_end {
		public const int Tag = 25;
	}

	public class sync_vip_info {
		public const int Tag = 52;
	}

	public class table_fire {
		public const int Tag = 7;
	}

	public class table_fish_net {
		public const int Tag = 8;
	}

	public class table_player_sit_down {
		public const int Tag = 3;
	}

	public class table_player_stand_up {
		public const int Tag = 4;
	}

	public class table_sync_event {
		public const int Tag = 19;
	}

	public class user_level_up {
		public const int Tag = 13;
	}

}