// Generated by sprotodump. DO NOT EDIT!
// source: ..\..\Protos\GameProto\Protos\\c2s-slim.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace ClientSprotoType { 
	public class battery_skill : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _time; // tag 1
		public Int64 time {
			get { return _time; }
			set { base.has_field.set_field (1, true); _time = value; }
		}
		public bool HasTime {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _factor; // tag 2
		public Int64 factor {
			get { return _factor; }
			set { base.has_field.set_field (2, true); _factor = value; }
		}
		public bool HasFactor {
			get { return base.has_field.has_field (2); }
		}

		public battery_skill () : base(max_field_count) {}

		public battery_skill (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.time = base.deserialize.read_integer ();
					break;
				case 2:
					this.factor = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.time, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.factor, 2);
			}

			return base.serialize.close ();
		}
	}


	public class delete_mail {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _guid; // tag 0
			public string guid {
				get { return _guid; }
				set { base.has_field.set_field (0, true); _guid = value; }
			}
			public bool HasGuid {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.guid = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.guid, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private string _guid; // tag 2
			public string guid {
				get { return _guid; }
				set { base.has_field.set_field (2, true); _guid = value; }
			}
			public bool HasGuid {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.guid = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.guid, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class express_info_item : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private string _recv_name; // tag 0
		public string recv_name {
			get { return _recv_name; }
			set { base.has_field.set_field (0, true); _recv_name = value; }
		}
		public bool HasRecv_name {
			get { return base.has_field.has_field (0); }
		}

		private string _phone; // tag 1
		public string phone {
			get { return _phone; }
			set { base.has_field.set_field (1, true); _phone = value; }
		}
		public bool HasPhone {
			get { return base.has_field.has_field (1); }
		}

		private string _address; // tag 2
		public string address {
			get { return _address; }
			set { base.has_field.set_field (2, true); _address = value; }
		}
		public bool HasAddress {
			get { return base.has_field.has_field (2); }
		}

		public express_info_item () : base(max_field_count) {}

		public express_info_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.recv_name = base.deserialize.read_string ();
					break;
				case 1:
					this.phone = base.deserialize.read_string ();
					break;
				case 2:
					this.address = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.recv_name, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.phone, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.address, 2);
			}

			return base.serialize.close ();
		}
	}


	public class fire {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private string _uid; // tag 0
			public string uid {
				get { return _uid; }
				set { base.has_field.set_field (0, true); _uid = value; }
			}
			public bool HasUid {
				get { return base.has_field.has_field (0); }
			}

			private string _rot; // tag 1
			public string rot {
				get { return _rot; }
				set { base.has_field.set_field (1, true); _rot = value; }
			}
			public bool HasRot {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _bullet_id; // tag 2
			public Int64 bullet_id {
				get { return _bullet_id; }
				set { base.has_field.set_field (2, true); _bullet_id = value; }
			}
			public bool HasBullet_id {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _lock_fish_id; // tag 3
			public Int64 lock_fish_id {
				get { return _lock_fish_id; }
				set { base.has_field.set_field (3, true); _lock_fish_id = value; }
			}
			public bool HasLock_fish_id {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uid = base.deserialize.read_string ();
						break;
					case 1:
						this.rot = base.deserialize.read_string ();
						break;
					case 2:
						this.bullet_id = base.deserialize.read_integer ();
						break;
					case 3:
						this.lock_fish_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.uid, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.rot, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.bullet_id, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.lock_fish_id, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class get {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _what; // tag 0
			public string what {
				get { return _what; }
				set { base.has_field.set_field (0, true); _what = value; }
			}
			public bool HasWhat {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.what = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.what, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _result; // tag 0
			public string result {
				get { return _result; }
				set { base.has_field.set_field (0, true); _result = value; }
			}
			public bool HasResult {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.result = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.result, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class get_mail_list {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class get_redpoint {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private List<Int64> _redpoint; // tag 2
			public List<Int64> redpoint {
				get { return _redpoint; }
				set { base.has_field.set_field (2, true); _redpoint = value; }
			}
			public bool HasRedpoint {
				get { return base.has_field.has_field (2); }
			}

			private List<Int64> _point_num; // tag 3
			public List<Int64> point_num {
				get { return _point_num; }
				set { base.has_field.set_field (3, true); _point_num = value; }
			}
			public bool HasPoint_num {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.redpoint = base.deserialize.read_integer_list ();
						break;
					case 3:
						this.point_num = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.redpoint, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.point_num, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class given_items : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private List<prop> _prop_items; // tag 0
		public List<prop> prop_items {
			get { return _prop_items; }
			set { base.has_field.set_field (0, true); _prop_items = value; }
		}
		public bool HasProp_items {
			get { return base.has_field.has_field (0); }
		}

		private List<Int64> _equip_list_active; // tag 1
		public List<Int64> equip_list_active {
			get { return _equip_list_active; }
			set { base.has_field.set_field (1, true); _equip_list_active = value; }
		}
		public bool HasEquip_list_active {
			get { return base.has_field.has_field (1); }
		}

		private List<prop> _express_goods; // tag 2
		public List<prop> express_goods {
			get { return _express_goods; }
			set { base.has_field.set_field (2, true); _express_goods = value; }
		}
		public bool HasExpress_goods {
			get { return base.has_field.has_field (2); }
		}

		private List<prop> _real_cards_prop; // tag 3
		public List<prop> real_cards_prop {
			get { return _real_cards_prop; }
			set { base.has_field.set_field (3, true); _real_cards_prop = value; }
		}
		public bool HasReal_cards_prop {
			get { return base.has_field.has_field (3); }
		}

		public given_items () : base(max_field_count) {}

		public given_items (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.prop_items = base.deserialize.read_obj_list<prop> ();
					break;
				case 1:
					this.equip_list_active = base.deserialize.read_integer_list ();
					break;
				case 2:
					this.express_goods = base.deserialize.read_obj_list<prop> ();
					break;
				case 3:
					this.real_cards_prop = base.deserialize.read_obj_list<prop> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_obj (this.prop_items, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.equip_list_active, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_obj (this.express_goods, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_obj (this.real_cards_prop, 3);
			}

			return base.serialize.close ();
		}
	}


	public class heartbeat {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


	}


	public class liveness_info : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _value; // tag 1
		public Int64 value {
			get { return _value; }
			set { base.has_field.set_field (1, true); _value = value; }
		}
		public bool HasValue {
			get { return base.has_field.has_field (1); }
		}

		private List<Int64> _rewarded_record; // tag 2
		public List<Int64> rewarded_record {
			get { return _rewarded_record; }
			set { base.has_field.set_field (2, true); _rewarded_record = value; }
		}
		public bool HasRewarded_record {
			get { return base.has_field.has_field (2); }
		}

		public liveness_info () : base(max_field_count) {}

		public liveness_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.value = base.deserialize.read_integer ();
					break;
				case 2:
					this.rewarded_record = base.deserialize.read_integer_list ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.value, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.rewarded_record, 2);
			}

			return base.serialize.close ();
		}
	}


	public class login {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 7;
			
			
			private string _account_type; // tag 1
			public string account_type {
				get { return _account_type; }
				set { base.has_field.set_field (0, true); _account_type = value; }
			}
			public bool HasAccount_type {
				get { return base.has_field.has_field (0); }
			}

			private string _openid; // tag 2
			public string openid {
				get { return _openid; }
				set { base.has_field.set_field (1, true); _openid = value; }
			}
			public bool HasOpenid {
				get { return base.has_field.has_field (1); }
			}

			private string _token; // tag 3
			public string token {
				get { return _token; }
				set { base.has_field.set_field (2, true); _token = value; }
			}
			public bool HasToken {
				get { return base.has_field.has_field (2); }
			}

			private string _device_info; // tag 4
			public string device_info {
				get { return _device_info; }
				set { base.has_field.set_field (3, true); _device_info = value; }
			}
			public bool HasDevice_info {
				get { return base.has_field.has_field (3); }
			}

			private string _appver; // tag 5
			public string appver {
				get { return _appver; }
				set { base.has_field.set_field (4, true); _appver = value; }
			}
			public bool HasAppver {
				get { return base.has_field.has_field (4); }
			}

			private string _extra; // tag 6
			public string extra {
				get { return _extra; }
				set { base.has_field.set_field (5, true); _extra = value; }
			}
			public bool HasExtra {
				get { return base.has_field.has_field (5); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 1:
						this.account_type = base.deserialize.read_string ();
						break;
					case 2:
						this.openid = base.deserialize.read_string ();
						break;
					case 3:
						this.token = base.deserialize.read_string ();
						break;
					case 4:
						this.device_info = base.deserialize.read_string ();
						break;
					case 5:
						this.appver = base.deserialize.read_string ();
						break;
					case 6:
						this.extra = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.account_type, 1);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.openid, 2);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.token, 3);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.device_info, 4);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.appver, 5);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_string (this.extra, 6);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 8;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private string _user_info; // tag 2
			public string user_info {
				get { return _user_info; }
				set { base.has_field.set_field (2, true); _user_info = value; }
			}
			public bool HasUser_info {
				get { return base.has_field.has_field (2); }
			}

			private string _openid; // tag 3
			public string openid {
				get { return _openid; }
				set { base.has_field.set_field (3, true); _openid = value; }
			}
			public bool HasOpenid {
				get { return base.has_field.has_field (3); }
			}

			private string _token; // tag 4
			public string token {
				get { return _token; }
				set { base.has_field.set_field (4, true); _token = value; }
			}
			public bool HasToken {
				get { return base.has_field.has_field (4); }
			}

			private string _app_update_info; // tag 5
			public string app_update_info {
				get { return _app_update_info; }
				set { base.has_field.set_field (5, true); _app_update_info = value; }
			}
			public bool HasApp_update_info {
				get { return base.has_field.has_field (5); }
			}

			private string _account; // tag 6
			public string account {
				get { return _account; }
				set { base.has_field.set_field (6, true); _account = value; }
			}
			public bool HasAccount {
				get { return base.has_field.has_field (6); }
			}

			private string _passwd; // tag 7
			public string passwd {
				get { return _passwd; }
				set { base.has_field.set_field (7, true); _passwd = value; }
			}
			public bool HasPasswd {
				get { return base.has_field.has_field (7); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.user_info = base.deserialize.read_string ();
						break;
					case 3:
						this.openid = base.deserialize.read_string ();
						break;
					case 4:
						this.token = base.deserialize.read_string ();
						break;
					case 5:
						this.app_update_info = base.deserialize.read_string ();
						break;
					case 6:
						this.account = base.deserialize.read_string ();
						break;
					case 7:
						this.passwd = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.user_info, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.openid, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.token, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_string (this.app_update_info, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_string (this.account, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_string (this.passwd, 7);
				}

				return base.serialize.close ();
			}
		}


	}


	public class machine_storm : SprotoTypeBase {
		private static int max_field_count = 6;
		
		
		private bool _init; // tag 0
		public bool init {
			get { return _init; }
			set { base.has_field.set_field (0, true); _init = value; }
		}
		public bool HasInit {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _silo_id; // tag 1
		public Int64 silo_id {
			get { return _silo_id; }
			set { base.has_field.set_field (1, true); _silo_id = value; }
		}
		public bool HasSilo_id {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _time; // tag 2
		public Int64 time {
			get { return _time; }
			set { base.has_field.set_field (2, true); _time = value; }
		}
		public bool HasTime {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _factor; // tag 3
		public Int64 factor {
			get { return _factor; }
			set { base.has_field.set_field (3, true); _factor = value; }
		}
		public bool HasFactor {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _add_time; // tag 4
		public Int64 add_time {
			get { return _add_time; }
			set { base.has_field.set_field (4, true); _add_time = value; }
		}
		public bool HasAdd_time {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _add_factor; // tag 5
		public Int64 add_factor {
			get { return _add_factor; }
			set { base.has_field.set_field (5, true); _add_factor = value; }
		}
		public bool HasAdd_factor {
			get { return base.has_field.has_field (5); }
		}

		public machine_storm () : base(max_field_count) {}

		public machine_storm (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.init = base.deserialize.read_boolean ();
					break;
				case 1:
					this.silo_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.time = base.deserialize.read_integer ();
					break;
				case 3:
					this.factor = base.deserialize.read_integer ();
					break;
				case 4:
					this.add_time = base.deserialize.read_integer ();
					break;
				case 5:
					this.add_factor = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_boolean (this.init, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.silo_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.time, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.factor, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.add_time, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.add_factor, 5);
			}

			return base.serialize.close ();
		}
	}


	public class open_mail {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _guid; // tag 0
			public string guid {
				get { return _guid; }
				set { base.has_field.set_field (0, true); _guid = value; }
			}
			public bool HasGuid {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.guid = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.guid, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private string _guid; // tag 2
			public string guid {
				get { return _guid; }
				set { base.has_field.set_field (2, true); _guid = value; }
			}
			public bool HasGuid {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.guid = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.guid, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class package : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _session; // tag 1
		public Int64 session {
			get { return _session; }
			set { base.has_field.set_field (1, true); _session = value; }
		}
		public bool HasSession {
			get { return base.has_field.has_field (1); }
		}

		public package () : base(max_field_count) {}

		public package (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.session = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.session, 1);
			}

			return base.serialize.close ();
		}
	}


	public class private_table_info : SprotoTypeBase {
		private static int max_field_count = 11;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _create_consume; // tag 1
		public Int64 create_consume {
			get { return _create_consume; }
			set { base.has_field.set_field (1, true); _create_consume = value; }
		}
		public bool HasCreate_consume {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _exist_time; // tag 2
		public Int64 exist_time {
			get { return _exist_time; }
			set { base.has_field.set_field (2, true); _exist_time = value; }
		}
		public bool HasExist_time {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _create_vip_limit; // tag 3
		public Int64 create_vip_limit {
			get { return _create_vip_limit; }
			set { base.has_field.set_field (3, true); _create_vip_limit = value; }
		}
		public bool HasCreate_vip_limit {
			get { return base.has_field.has_field (3); }
		}

		private string _create_gold_limit; // tag 4
		public string create_gold_limit {
			get { return _create_gold_limit; }
			set { base.has_field.set_field (4, true); _create_gold_limit = value; }
		}
		public bool HasCreate_gold_limit {
			get { return base.has_field.has_field (4); }
		}

		private string _create_energy_limit; // tag 5
		public string create_energy_limit {
			get { return _create_energy_limit; }
			set { base.has_field.set_field (5, true); _create_energy_limit = value; }
		}
		public bool HasCreate_energy_limit {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _join_vip_limit; // tag 6
		public Int64 join_vip_limit {
			get { return _join_vip_limit; }
			set { base.has_field.set_field (6, true); _join_vip_limit = value; }
		}
		public bool HasJoin_vip_limit {
			get { return base.has_field.has_field (6); }
		}

		private string _join_gold_limit; // tag 7
		public string join_gold_limit {
			get { return _join_gold_limit; }
			set { base.has_field.set_field (7, true); _join_gold_limit = value; }
		}
		public bool HasJoin_gold_limit {
			get { return base.has_field.has_field (7); }
		}

		private string _join_energy_limit; // tag 8
		public string join_energy_limit {
			get { return _join_energy_limit; }
			set { base.has_field.set_field (8, true); _join_energy_limit = value; }
		}
		public bool HasJoin_energy_limit {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _renew_consume; // tag 9
		public Int64 renew_consume {
			get { return _renew_consume; }
			set { base.has_field.set_field (9, true); _renew_consume = value; }
		}
		public bool HasRenew_consume {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _consume_item_id; // tag 10
		public Int64 consume_item_id {
			get { return _consume_item_id; }
			set { base.has_field.set_field (10, true); _consume_item_id = value; }
		}
		public bool HasConsume_item_id {
			get { return base.has_field.has_field (10); }
		}

		public private_table_info () : base(max_field_count) {}

		public private_table_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.create_consume = base.deserialize.read_integer ();
					break;
				case 2:
					this.exist_time = base.deserialize.read_integer ();
					break;
				case 3:
					this.create_vip_limit = base.deserialize.read_integer ();
					break;
				case 4:
					this.create_gold_limit = base.deserialize.read_string ();
					break;
				case 5:
					this.create_energy_limit = base.deserialize.read_string ();
					break;
				case 6:
					this.join_vip_limit = base.deserialize.read_integer ();
					break;
				case 7:
					this.join_gold_limit = base.deserialize.read_string ();
					break;
				case 8:
					this.join_energy_limit = base.deserialize.read_string ();
					break;
				case 9:
					this.renew_consume = base.deserialize.read_integer ();
					break;
				case 10:
					this.consume_item_id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.create_consume, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.exist_time, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.create_vip_limit, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.create_gold_limit, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.create_energy_limit, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.join_vip_limit, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_string (this.join_gold_limit, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_string (this.join_energy_limit, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.renew_consume, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.consume_item_id, 10);
			}

			return base.serialize.close ();
		}
	}


	public class prop : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _quantity; // tag 1
		public Int64 quantity {
			get { return _quantity; }
			set { base.has_field.set_field (1, true); _quantity = value; }
		}
		public bool HasQuantity {
			get { return base.has_field.has_field (1); }
		}

		public prop () : base(max_field_count) {}

		public prop (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.quantity = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.quantity, 1);
			}

			return base.serialize.close ();
		}
	}


	public class quick_sign_up {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 17;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private List<table_player> _players; // tag 1
			public List<table_player> players {
				get { return _players; }
				set { base.has_field.set_field (1, true); _players = value; }
			}
			public bool HasPlayers {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _chair_id; // tag 2
			public Int64 chair_id {
				get { return _chair_id; }
				set { base.has_field.set_field (2, true); _chair_id = value; }
			}
			public bool HasChair_id {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _room_id; // tag 3
			public Int64 room_id {
				get { return _room_id; }
				set { base.has_field.set_field (3, true); _room_id = value; }
			}
			public bool HasRoom_id {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _frozen_end_time; // tag 4
			public Int64 frozen_end_time {
				get { return _frozen_end_time; }
				set { base.has_field.set_field (4, true); _frozen_end_time = value; }
			}
			public bool HasFrozen_end_time {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _table_id; // tag 5
			public Int64 table_id {
				get { return _table_id; }
				set { base.has_field.set_field (5, true); _table_id = value; }
			}
			public bool HasTable_id {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _table_status; // tag 6
			public Int64 table_status {
				get { return _table_status; }
				set { base.has_field.set_field (6, true); _table_status = value; }
			}
			public bool HasTable_status {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _table_type; // tag 8
			public Int64 table_type {
				get { return _table_type; }
				set { base.has_field.set_field (7, true); _table_type = value; }
			}
			public bool HasTable_type {
				get { return base.has_field.has_field (7); }
			}

			private bool _room_slots_open; // tag 9
			public bool room_slots_open {
				get { return _room_slots_open; }
				set { base.has_field.set_field (8, true); _room_slots_open = value; }
			}
			public bool HasRoom_slots_open {
				get { return base.has_field.has_field (8); }
			}

			private Int64 _room_slots_score; // tag 11
			public Int64 room_slots_score {
				get { return _room_slots_score; }
				set { base.has_field.set_field (9, true); _room_slots_score = value; }
			}
			public bool HasRoom_slots_score {
				get { return base.has_field.has_field (9); }
			}

			private List<Int64> _room_slots_costs; // tag 12
			public List<Int64> room_slots_costs {
				get { return _room_slots_costs; }
				set { base.has_field.set_field (10, true); _room_slots_costs = value; }
			}
			public bool HasRoom_slots_costs {
				get { return base.has_field.has_field (10); }
			}

			private string _room_pool; // tag 13
			public string room_pool {
				get { return _room_pool; }
				set { base.has_field.set_field (11, true); _room_pool = value; }
			}
			public bool HasRoom_pool {
				get { return base.has_field.has_field (11); }
			}

			private Int64 _room_slots_max_score; // tag 14
			public Int64 room_slots_max_score {
				get { return _room_slots_max_score; }
				set { base.has_field.set_field (12, true); _room_slots_max_score = value; }
			}
			public bool HasRoom_slots_max_score {
				get { return base.has_field.has_field (12); }
			}

			private Int64 _private_id; // tag 15
			public Int64 private_id {
				get { return _private_id; }
				set { base.has_field.set_field (13, true); _private_id = value; }
			}
			public bool HasPrivate_id {
				get { return base.has_field.has_field (13); }
			}

			private Int64 _p_table_expire_t; // tag 16
			public Int64 p_table_expire_t {
				get { return _p_table_expire_t; }
				set { base.has_field.set_field (14, true); _p_table_expire_t = value; }
			}
			public bool HasP_table_expire_t {
				get { return base.has_field.has_field (14); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.players = base.deserialize.read_obj_list<table_player> ();
						break;
					case 2:
						this.chair_id = base.deserialize.read_integer ();
						break;
					case 3:
						this.room_id = base.deserialize.read_integer ();
						break;
					case 4:
						this.frozen_end_time = base.deserialize.read_integer ();
						break;
					case 5:
						this.table_id = base.deserialize.read_integer ();
						break;
					case 6:
						this.table_status = base.deserialize.read_integer ();
						break;
					case 8:
						this.table_type = base.deserialize.read_integer ();
						break;
					case 9:
						this.room_slots_open = base.deserialize.read_boolean ();
						break;
					case 11:
						this.room_slots_score = base.deserialize.read_integer ();
						break;
					case 12:
						this.room_slots_costs = base.deserialize.read_integer_list ();
						break;
					case 13:
						this.room_pool = base.deserialize.read_string ();
						break;
					case 14:
						this.room_slots_max_score = base.deserialize.read_integer ();
						break;
					case 15:
						this.private_id = base.deserialize.read_integer ();
						break;
					case 16:
						this.p_table_expire_t = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.players, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.chair_id, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.room_id, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.frozen_end_time, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.table_id, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.table_status, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.table_type, 8);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_boolean (this.room_slots_open, 9);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_integer (this.room_slots_score, 11);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_integer (this.room_slots_costs, 12);
				}

				if (base.has_field.has_field (11)) {
					base.serialize.write_string (this.room_pool, 13);
				}

				if (base.has_field.has_field (12)) {
					base.serialize.write_integer (this.room_slots_max_score, 14);
				}

				if (base.has_field.has_field (13)) {
					base.serialize.write_integer (this.private_id, 15);
				}

				if (base.has_field.has_field (14)) {
					base.serialize.write_integer (this.p_table_expire_t, 16);
				}

				return base.serialize.close ();
			}
		}


	}


	public class reach_cond : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _num; // tag 1
		public Int64 num {
			get { return _num; }
			set { base.has_field.set_field (1, true); _num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (1); }
		}

		public reach_cond () : base(max_field_count) {}

		public reach_cond (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.num, 1);
			}

			return base.serialize.close ();
		}
	}


	public class req_backpack_data {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _props; // tag 2
			public List<prop> props {
				get { return _props; }
				set { base.has_field.set_field (2, true); _props = value; }
			}
			public bool HasProps {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.props = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.props, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class req_jump_room_id {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _type; // tag 0
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (0, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.type, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _type; // tag 1
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (1, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (1); }
			}

			private List<Int64> _room_id; // tag 2
			public List<Int64> room_id {
				get { return _room_id; }
				set { base.has_field.set_field (2, true); _room_id = value; }
			}
			public bool HasRoom_id {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.type = base.deserialize.read_integer ();
						break;
					case 2:
						this.room_id = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.room_id, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class req_monopoly_dice {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _dice_value; // tag 1
			public Int64 dice_value {
				get { return _dice_value; }
				set { base.has_field.set_field (1, true); _dice_value = value; }
			}
			public bool HasDice_value {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _chances; // tag 2
			public Int64 chances {
				get { return _chances; }
				set { base.has_field.set_field (2, true); _chances = value; }
			}
			public bool HasChances {
				get { return base.has_field.has_field (2); }
			}

			private List<tile> _tiles; // tag 3
			public List<tile> tiles {
				get { return _tiles; }
				set { base.has_field.set_field (3, true); _tiles = value; }
			}
			public bool HasTiles {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.dice_value = base.deserialize.read_integer ();
						break;
					case 2:
						this.chances = base.deserialize.read_integer ();
						break;
					case 3:
						this.tiles = base.deserialize.read_obj_list<tile> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.dice_value, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.chances, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.tiles, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class req_open_backpack {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


	}


	public class req_room_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<table_player> _players; // tag 0
			public List<table_player> players {
				get { return _players; }
				set { base.has_field.set_field (0, true); _players = value; }
			}
			public bool HasPlayers {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.players = base.deserialize.read_obj_list<table_player> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.players, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class req_room_list {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private List<room_info> _list; // tag 0
			public List<room_info> list {
				get { return _list; }
				set { base.has_field.set_field (0, true); _list = value; }
			}
			public bool HasList {
				get { return base.has_field.has_field (0); }
			}

			private List<private_table_info> _p_table_cfg; // tag 1
			public List<private_table_info> p_table_cfg {
				get { return _p_table_cfg; }
				set { base.has_field.set_field (1, true); _p_table_cfg = value; }
			}
			public bool HasP_table_cfg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.list = base.deserialize.read_obj_list<room_info> ();
						break;
					case 1:
						this.p_table_cfg = base.deserialize.read_obj_list<private_table_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.list, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.p_table_cfg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class req_small_game_end {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class req_small_game_start {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _type; // tag 1
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (1, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					case 1:
						this.type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.type, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _id; // tag 1
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (1, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (1); }
			}

			private string _extra; // tag 2
			public string extra {
				get { return _extra; }
				set { base.has_field.set_field (2, true); _extra = value; }
			}
			public bool HasExtra {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _count; // tag 3
			public Int64 count {
				get { return _count; }
				set { base.has_field.set_field (3, true); _count = value; }
			}
			public bool HasCount {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.id = base.deserialize.read_integer ();
						break;
					case 2:
						this.extra = base.deserialize.read_string ();
						break;
					case 3:
						this.count = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.id, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.extra, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.count, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class req_task_list {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private List<task_info> _task_list; // tag 2
			public List<task_info> task_list {
				get { return _task_list; }
				set { base.has_field.set_field (2, true); _task_list = value; }
			}
			public bool HasTask_list {
				get { return base.has_field.has_field (2); }
			}

			private List<liveness_info> _liveness; // tag 3
			public List<liveness_info> liveness {
				get { return _liveness; }
				set { base.has_field.set_field (3, true); _liveness = value; }
			}
			public bool HasLiveness {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.task_list = base.deserialize.read_obj_list<task_info> ();
						break;
					case 3:
						this.liveness = base.deserialize.read_obj_list<liveness_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.task_list, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.liveness, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class req_task_reward {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _task_id; // tag 0
			public Int64 task_id {
				get { return _task_id; }
				set { base.has_field.set_field (0, true); _task_id = value; }
			}
			public bool HasTask_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.task_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.task_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 6;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _task_id; // tag 2
			public Int64 task_id {
				get { return _task_id; }
				set { base.has_field.set_field (2, true); _task_id = value; }
			}
			public bool HasTask_id {
				get { return base.has_field.has_field (2); }
			}

			private string _total_gold; // tag 3
			public string total_gold {
				get { return _total_gold; }
				set { base.has_field.set_field (3, true); _total_gold = value; }
			}
			public bool HasTotal_gold {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _total_diamond; // tag 4
			public Int64 total_diamond {
				get { return _total_diamond; }
				set { base.has_field.set_field (4, true); _total_diamond = value; }
			}
			public bool HasTotal_diamond {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _next_main; // tag 5
			public Int64 next_main {
				get { return _next_main; }
				set { base.has_field.set_field (5, true); _next_main = value; }
			}
			public bool HasNext_main {
				get { return base.has_field.has_field (5); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.task_id = base.deserialize.read_integer ();
						break;
					case 3:
						this.total_gold = base.deserialize.read_string ();
						break;
					case 4:
						this.total_diamond = base.deserialize.read_integer ();
						break;
					case 5:
						this.next_main = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.task_id, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.total_gold, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.total_diamond, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.next_main, 5);
				}

				return base.serialize.close ();
			}
		}


	}


	public class req_tb_cfg {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _tb_cfg_id; // tag 0
			public Int64 tb_cfg_id {
				get { return _tb_cfg_id; }
				set { base.has_field.set_field (0, true); _tb_cfg_id = value; }
			}
			public bool HasTb_cfg_id {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _index_page; // tag 1
			public Int64 index_page {
				get { return _index_page; }
				set { base.has_field.set_field (1, true); _index_page = value; }
			}
			public bool HasIndex_page {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.tb_cfg_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.index_page = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.tb_cfg_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.index_page, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class room_info : SprotoTypeBase {
		private static int max_field_count = 10;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private string _name; // tag 1
		public string name {
			get { return _name; }
			set { base.has_field.set_field (1, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (1); }
		}

		private bool _can_enter; // tag 2
		public bool can_enter {
			get { return _can_enter; }
			set { base.has_field.set_field (2, true); _can_enter = value; }
		}
		public bool HasCan_enter {
			get { return base.has_field.has_field (2); }
		}

		private bool _unlocked; // tag 3
		public bool unlocked {
			get { return _unlocked; }
			set { base.has_field.set_field (3, true); _unlocked = value; }
		}
		public bool HasUnlocked {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _start_time; // tag 4
		public Int64 start_time {
			get { return _start_time; }
			set { base.has_field.set_field (4, true); _start_time = value; }
		}
		public bool HasStart_time {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _end_time; // tag 5
		public Int64 end_time {
			get { return _end_time; }
			set { base.has_field.set_field (5, true); _end_time = value; }
		}
		public bool HasEnd_time {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _is_open; // tag 6
		public Int64 is_open {
			get { return _is_open; }
			set { base.has_field.set_field (6, true); _is_open = value; }
		}
		public bool HasIs_open {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _start_date; // tag 7
		public Int64 start_date {
			get { return _start_date; }
			set { base.has_field.set_field (7, true); _start_date = value; }
		}
		public bool HasStart_date {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _end_date; // tag 8
		public Int64 end_date {
			get { return _end_date; }
			set { base.has_field.set_field (8, true); _end_date = value; }
		}
		public bool HasEnd_date {
			get { return base.has_field.has_field (8); }
		}

		private string _jackpot_score; // tag 9
		public string jackpot_score {
			get { return _jackpot_score; }
			set { base.has_field.set_field (9, true); _jackpot_score = value; }
		}
		public bool HasJackpot_score {
			get { return base.has_field.has_field (9); }
		}

		public room_info () : base(max_field_count) {}

		public room_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.name = base.deserialize.read_string ();
					break;
				case 2:
					this.can_enter = base.deserialize.read_boolean ();
					break;
				case 3:
					this.unlocked = base.deserialize.read_boolean ();
					break;
				case 4:
					this.start_time = base.deserialize.read_integer ();
					break;
				case 5:
					this.end_time = base.deserialize.read_integer ();
					break;
				case 6:
					this.is_open = base.deserialize.read_integer ();
					break;
				case 7:
					this.start_date = base.deserialize.read_integer ();
					break;
				case 8:
					this.end_date = base.deserialize.read_integer ();
					break;
				case 9:
					this.jackpot_score = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.name, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_boolean (this.can_enter, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_boolean (this.unlocked, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.start_time, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.end_time, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.is_open, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.start_date, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.end_date, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_string (this.jackpot_score, 9);
			}

			return base.serialize.close ();
		}
	}


	public class room_quit {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _mark; // tag 0
			public Int64 mark {
				get { return _mark; }
				set { base.has_field.set_field (0, true); _mark = value; }
			}
			public bool HasMark {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.mark = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.mark, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _mark; // tag 1
			public Int64 mark {
				get { return _mark; }
				set { base.has_field.set_field (1, true); _mark = value; }
			}
			public bool HasMark {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.mark = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.mark, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class room_sign_up {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _room_id; // tag 0
			public Int64 room_id {
				get { return _room_id; }
				set { base.has_field.set_field (0, true); _room_id = value; }
			}
			public bool HasRoom_id {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _table_id; // tag 1
			public Int64 table_id {
				get { return _table_id; }
				set { base.has_field.set_field (1, true); _table_id = value; }
			}
			public bool HasTable_id {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _ignore_table_id; // tag 2
			public Int64 ignore_table_id {
				get { return _ignore_table_id; }
				set { base.has_field.set_field (2, true); _ignore_table_id = value; }
			}
			public bool HasIgnore_table_id {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _table_type; // tag 3
			public Int64 table_type {
				get { return _table_type; }
				set { base.has_field.set_field (3, true); _table_type = value; }
			}
			public bool HasTable_type {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _private_id; // tag 4
			public Int64 private_id {
				get { return _private_id; }
				set { base.has_field.set_field (4, true); _private_id = value; }
			}
			public bool HasPrivate_id {
				get { return base.has_field.has_field (4); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.room_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.table_id = base.deserialize.read_integer ();
						break;
					case 2:
						this.ignore_table_id = base.deserialize.read_integer ();
						break;
					case 3:
						this.table_type = base.deserialize.read_integer ();
						break;
					case 4:
						this.private_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.room_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.table_id, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.ignore_table_id, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.table_type, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.private_id, 4);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 19;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private List<table_player> _players; // tag 1
			public List<table_player> players {
				get { return _players; }
				set { base.has_field.set_field (1, true); _players = value; }
			}
			public bool HasPlayers {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _chair_id; // tag 2
			public Int64 chair_id {
				get { return _chair_id; }
				set { base.has_field.set_field (2, true); _chair_id = value; }
			}
			public bool HasChair_id {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _room_id; // tag 3
			public Int64 room_id {
				get { return _room_id; }
				set { base.has_field.set_field (3, true); _room_id = value; }
			}
			public bool HasRoom_id {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _frozen_end_time; // tag 4
			public Int64 frozen_end_time {
				get { return _frozen_end_time; }
				set { base.has_field.set_field (4, true); _frozen_end_time = value; }
			}
			public bool HasFrozen_end_time {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _table_id; // tag 5
			public Int64 table_id {
				get { return _table_id; }
				set { base.has_field.set_field (5, true); _table_id = value; }
			}
			public bool HasTable_id {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _table_status; // tag 6
			public Int64 table_status {
				get { return _table_status; }
				set { base.has_field.set_field (6, true); _table_status = value; }
			}
			public bool HasTable_status {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _table_type; // tag 8
			public Int64 table_type {
				get { return _table_type; }
				set { base.has_field.set_field (7, true); _table_type = value; }
			}
			public bool HasTable_type {
				get { return base.has_field.has_field (7); }
			}

			private bool _room_slots_open; // tag 9
			public bool room_slots_open {
				get { return _room_slots_open; }
				set { base.has_field.set_field (8, true); _room_slots_open = value; }
			}
			public bool HasRoom_slots_open {
				get { return base.has_field.has_field (8); }
			}

			private Int64 _slots_star; // tag 10
			public Int64 slots_star {
				get { return _slots_star; }
				set { base.has_field.set_field (9, true); _slots_star = value; }
			}
			public bool HasSlots_star {
				get { return base.has_field.has_field (9); }
			}

			private Int64 _room_slots_score; // tag 11
			public Int64 room_slots_score {
				get { return _room_slots_score; }
				set { base.has_field.set_field (10, true); _room_slots_score = value; }
			}
			public bool HasRoom_slots_score {
				get { return base.has_field.has_field (10); }
			}

			private List<Int64> _room_slots_costs; // tag 12
			public List<Int64> room_slots_costs {
				get { return _room_slots_costs; }
				set { base.has_field.set_field (11, true); _room_slots_costs = value; }
			}
			public bool HasRoom_slots_costs {
				get { return base.has_field.has_field (11); }
			}

			private string _room_pool; // tag 13
			public string room_pool {
				get { return _room_pool; }
				set { base.has_field.set_field (12, true); _room_pool = value; }
			}
			public bool HasRoom_pool {
				get { return base.has_field.has_field (12); }
			}

			private Int64 _room_slots_max_score; // tag 14
			public Int64 room_slots_max_score {
				get { return _room_slots_max_score; }
				set { base.has_field.set_field (13, true); _room_slots_max_score = value; }
			}
			public bool HasRoom_slots_max_score {
				get { return base.has_field.has_field (13); }
			}

			private Int64 _private_id; // tag 15
			public Int64 private_id {
				get { return _private_id; }
				set { base.has_field.set_field (14, true); _private_id = value; }
			}
			public bool HasPrivate_id {
				get { return base.has_field.has_field (14); }
			}

			private Int64 _p_table_expire_t; // tag 16
			public Int64 p_table_expire_t {
				get { return _p_table_expire_t; }
				set { base.has_field.set_field (15, true); _p_table_expire_t = value; }
			}
			public bool HasP_table_expire_t {
				get { return base.has_field.has_field (15); }
			}

			private string _creator_uid; // tag 17
			public string creator_uid {
				get { return _creator_uid; }
				set { base.has_field.set_field (16, true); _creator_uid = value; }
			}
			public bool HasCreator_uid {
				get { return base.has_field.has_field (16); }
			}

			private machine_storm _machine_storm; // tag 18
			public machine_storm machine_storm {
				get { return _machine_storm; }
				set { base.has_field.set_field (17, true); _machine_storm = value; }
			}
			public bool HasMachine_storm {
				get { return base.has_field.has_field (17); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.players = base.deserialize.read_obj_list<table_player> ();
						break;
					case 2:
						this.chair_id = base.deserialize.read_integer ();
						break;
					case 3:
						this.room_id = base.deserialize.read_integer ();
						break;
					case 4:
						this.frozen_end_time = base.deserialize.read_integer ();
						break;
					case 5:
						this.table_id = base.deserialize.read_integer ();
						break;
					case 6:
						this.table_status = base.deserialize.read_integer ();
						break;
					case 8:
						this.table_type = base.deserialize.read_integer ();
						break;
					case 9:
						this.room_slots_open = base.deserialize.read_boolean ();
						break;
					case 10:
						this.slots_star = base.deserialize.read_integer ();
						break;
					case 11:
						this.room_slots_score = base.deserialize.read_integer ();
						break;
					case 12:
						this.room_slots_costs = base.deserialize.read_integer_list ();
						break;
					case 13:
						this.room_pool = base.deserialize.read_string ();
						break;
					case 14:
						this.room_slots_max_score = base.deserialize.read_integer ();
						break;
					case 15:
						this.private_id = base.deserialize.read_integer ();
						break;
					case 16:
						this.p_table_expire_t = base.deserialize.read_integer ();
						break;
					case 17:
						this.creator_uid = base.deserialize.read_string ();
						break;
					case 18:
						this.machine_storm = base.deserialize.read_obj<machine_storm> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.players, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.chair_id, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.room_id, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.frozen_end_time, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.table_id, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.table_status, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.table_type, 8);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_boolean (this.room_slots_open, 9);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_integer (this.slots_star, 10);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_integer (this.room_slots_score, 11);
				}

				if (base.has_field.has_field (11)) {
					base.serialize.write_integer (this.room_slots_costs, 12);
				}

				if (base.has_field.has_field (12)) {
					base.serialize.write_string (this.room_pool, 13);
				}

				if (base.has_field.has_field (13)) {
					base.serialize.write_integer (this.room_slots_max_score, 14);
				}

				if (base.has_field.has_field (14)) {
					base.serialize.write_integer (this.private_id, 15);
				}

				if (base.has_field.has_field (15)) {
					base.serialize.write_integer (this.p_table_expire_t, 16);
				}

				if (base.has_field.has_field (16)) {
					base.serialize.write_string (this.creator_uid, 17);
				}

				if (base.has_field.has_field (17)) {
					base.serialize.write_obj (this.machine_storm, 18);
				}

				return base.serialize.close ();
			}
		}


	}


	public class sync_user_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private string _gold; // tag 0
			public string gold {
				get { return _gold; }
				set { base.has_field.set_field (0, true); _gold = value; }
			}
			public bool HasGold {
				get { return base.has_field.has_field (0); }
			}

			private string _energy; // tag 1
			public string energy {
				get { return _energy; }
				set { base.has_field.set_field (1, true); _energy = value; }
			}
			public bool HasEnergy {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _diamond; // tag 2
			public Int64 diamond {
				get { return _diamond; }
				set { base.has_field.set_field (2, true); _diamond = value; }
			}
			public bool HasDiamond {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _lottery; // tag 3
			public Int64 lottery {
				get { return _lottery; }
				set { base.has_field.set_field (3, true); _lottery = value; }
			}
			public bool HasLottery {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _tickets; // tag 4
			public Int64 tickets {
				get { return _tickets; }
				set { base.has_field.set_field (4, true); _tickets = value; }
			}
			public bool HasTickets {
				get { return base.has_field.has_field (4); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.gold = base.deserialize.read_string ();
						break;
					case 1:
						this.energy = base.deserialize.read_string ();
						break;
					case 2:
						this.diamond = base.deserialize.read_integer ();
						break;
					case 3:
						this.lottery = base.deserialize.read_integer ();
						break;
					case 4:
						this.tickets = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.gold, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.energy, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.diamond, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.lottery, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.tickets, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class table_player : SprotoTypeBase {
		private static int max_field_count = 34;
		
		
		private string _uid; // tag 0
		public string uid {
			get { return _uid; }
			set { base.has_field.set_field (0, true); _uid = value; }
		}
		public bool HasUid {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _chair_id; // tag 1
		public Int64 chair_id {
			get { return _chair_id; }
			set { base.has_field.set_field (1, true); _chair_id = value; }
		}
		public bool HasChair_id {
			get { return base.has_field.has_field (1); }
		}

		private string _gold; // tag 2
		public string gold {
			get { return _gold; }
			set { base.has_field.set_field (2, true); _gold = value; }
		}
		public bool HasGold {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _level; // tag 3
		public Int64 level {
			get { return _level; }
			set { base.has_field.set_field (3, true); _level = value; }
		}
		public bool HasLevel {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _gender; // tag 4
		public Int64 gender {
			get { return _gender; }
			set { base.has_field.set_field (4, true); _gender = value; }
		}
		public bool HasGender {
			get { return base.has_field.has_field (4); }
		}

		private string _nickname; // tag 5
		public string nickname {
			get { return _nickname; }
			set { base.has_field.set_field (5, true); _nickname = value; }
		}
		public bool HasNickname {
			get { return base.has_field.has_field (5); }
		}

		private string _img_url; // tag 6
		public string img_url {
			get { return _img_url; }
			set { base.has_field.set_field (6, true); _img_url = value; }
		}
		public bool HasImg_url {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _diamond; // tag 7
		public Int64 diamond {
			get { return _diamond; }
			set { base.has_field.set_field (7, true); _diamond = value; }
		}
		public bool HasDiamond {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _unlock_battery; // tag 8
		public Int64 unlock_battery {
			get { return _unlock_battery; }
			set { base.has_field.set_field (8, true); _unlock_battery = value; }
		}
		public bool HasUnlock_battery {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _using_cannon; // tag 9
		public Int64 using_cannon {
			get { return _using_cannon; }
			set { base.has_field.set_field (9, true); _using_cannon = value; }
		}
		public bool HasUsing_cannon {
			get { return base.has_field.has_field (9); }
		}

		private List<Int64> _using_skill_ids; // tag 10
		public List<Int64> using_skill_ids {
			get { return _using_skill_ids; }
			set { base.has_field.set_field (10, true); _using_skill_ids = value; }
		}
		public bool HasUsing_skill_ids {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _cannon_id_raise_weight; // tag 11
		public Int64 cannon_id_raise_weight {
			get { return _cannon_id_raise_weight; }
			set { base.has_field.set_field (11, true); _cannon_id_raise_weight = value; }
		}
		public bool HasCannon_id_raise_weight {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _cannon_power; // tag 12
		public Int64 cannon_power {
			get { return _cannon_power; }
			set { base.has_field.set_field (12, true); _cannon_power = value; }
		}
		public bool HasCannon_power {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _using_cannon_multiple; // tag 13
		public Int64 using_cannon_multiple {
			get { return _using_cannon_multiple; }
			set { base.has_field.set_field (13, true); _using_cannon_multiple = value; }
		}
		public bool HasUsing_cannon_multiple {
			get { return base.has_field.has_field (13); }
		}

		private bool _is_bankruptcy; // tag 14
		public bool is_bankruptcy {
			get { return _is_bankruptcy; }
			set { base.has_field.set_field (14, true); _is_bankruptcy = value; }
		}
		public bool HasIs_bankruptcy {
			get { return base.has_field.has_field (14); }
		}

		private List<prop> _items; // tag 15
		public List<prop> items {
			get { return _items; }
			set { base.has_field.set_field (15, true); _items = value; }
		}
		public bool HasItems {
			get { return base.has_field.has_field (15); }
		}

		private Int64 _account_id; // tag 16
		public Int64 account_id {
			get { return _account_id; }
			set { base.has_field.set_field (16, true); _account_id = value; }
		}
		public bool HasAccount_id {
			get { return base.has_field.has_field (16); }
		}

		private Int64 _free_auto_fire_remain; // tag 17
		public Int64 free_auto_fire_remain {
			get { return _free_auto_fire_remain; }
			set { base.has_field.set_field (17, true); _free_auto_fire_remain = value; }
		}
		public bool HasFree_auto_fire_remain {
			get { return base.has_field.has_field (17); }
		}

		private string _pay_auto_fire_end; // tag 18
		public string pay_auto_fire_end {
			get { return _pay_auto_fire_end; }
			set { base.has_field.set_field (18, true); _pay_auto_fire_end = value; }
		}
		public bool HasPay_auto_fire_end {
			get { return base.has_field.has_field (18); }
		}

		private Int64 _small_game_id; // tag 19
		public Int64 small_game_id {
			get { return _small_game_id; }
			set { base.has_field.set_field (19, true); _small_game_id = value; }
		}
		public bool HasSmall_game_id {
			get { return base.has_field.has_field (19); }
		}

		private Int64 _machine_storm_cannon; // tag 20
		public Int64 machine_storm_cannon {
			get { return _machine_storm_cannon; }
			set { base.has_field.set_field (20, true); _machine_storm_cannon = value; }
		}
		public bool HasMachine_storm_cannon {
			get { return base.has_field.has_field (20); }
		}

		private Int64 _dizzy_time; // tag 21
		public Int64 dizzy_time {
			get { return _dizzy_time; }
			set { base.has_field.set_field (21, true); _dizzy_time = value; }
		}
		public bool HasDizzy_time {
			get { return base.has_field.has_field (21); }
		}

		private Int64 _slow_time; // tag 22
		public Int64 slow_time {
			get { return _slow_time; }
			set { base.has_field.set_field (22, true); _slow_time = value; }
		}
		public bool HasSlow_time {
			get { return base.has_field.has_field (22); }
		}

		private bool _world_boss_rewarding; // tag 23
		public bool world_boss_rewarding {
			get { return _world_boss_rewarding; }
			set { base.has_field.set_field (23, true); _world_boss_rewarding = value; }
		}
		public bool HasWorld_boss_rewarding {
			get { return base.has_field.has_field (23); }
		}

		private Int64 _icon_box_id; // tag 24
		public Int64 icon_box_id {
			get { return _icon_box_id; }
			set { base.has_field.set_field (24, true); _icon_box_id = value; }
		}
		public bool HasIcon_box_id {
			get { return base.has_field.has_field (24); }
		}

		private Int64 _battery_skill_energy; // tag 25
		public Int64 battery_skill_energy {
			get { return _battery_skill_energy; }
			set { base.has_field.set_field (25, true); _battery_skill_energy = value; }
		}
		public bool HasBattery_skill_energy {
			get { return base.has_field.has_field (25); }
		}

		private string _s_battery_skill_energy; // tag 26
		public string s_battery_skill_energy {
			get { return _s_battery_skill_energy; }
			set { base.has_field.set_field (26, true); _s_battery_skill_energy = value; }
		}
		public bool HasS_battery_skill_energy {
			get { return base.has_field.has_field (26); }
		}

		private bool _in_boss_pay_lottery; // tag 27
		public bool in_boss_pay_lottery {
			get { return _in_boss_pay_lottery; }
			set { base.has_field.set_field (27, true); _in_boss_pay_lottery = value; }
		}
		public bool HasIn_boss_pay_lottery {
			get { return base.has_field.has_field (27); }
		}

		private Int64 _room_colored_gold_action; // tag 28
		public Int64 room_colored_gold_action {
			get { return _room_colored_gold_action; }
			set { base.has_field.set_field (28, true); _room_colored_gold_action = value; }
		}
		public bool HasRoom_colored_gold_action {
			get { return base.has_field.has_field (28); }
		}

		private Int64 _room_colored_gold_state; // tag 29
		public Int64 room_colored_gold_state {
			get { return _room_colored_gold_state; }
			set { base.has_field.set_field (29, true); _room_colored_gold_state = value; }
		}
		public bool HasRoom_colored_gold_state {
			get { return base.has_field.has_field (29); }
		}

		private Int64 _current_money_border_id; // tag 31
		public Int64 current_money_border_id {
			get { return _current_money_border_id; }
			set { base.has_field.set_field (30, true); _current_money_border_id = value; }
		}
		public bool HasCurrent_money_border_id {
			get { return base.has_field.has_field (30); }
		}

		private battery_skill _battery_skill; // tag 33
		public battery_skill battery_skill {
			get { return _battery_skill; }
			set { base.has_field.set_field (31, true); _battery_skill = value; }
		}
		public bool HasBattery_skill {
			get { return base.has_field.has_field (31); }
		}

		public table_player () : base(max_field_count) {}

		public table_player (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.uid = base.deserialize.read_string ();
					break;
				case 1:
					this.chair_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.gold = base.deserialize.read_string ();
					break;
				case 3:
					this.level = base.deserialize.read_integer ();
					break;
				case 4:
					this.gender = base.deserialize.read_integer ();
					break;
				case 5:
					this.nickname = base.deserialize.read_string ();
					break;
				case 6:
					this.img_url = base.deserialize.read_string ();
					break;
				case 7:
					this.diamond = base.deserialize.read_integer ();
					break;
				case 8:
					this.unlock_battery = base.deserialize.read_integer ();
					break;
				case 9:
					this.using_cannon = base.deserialize.read_integer ();
					break;
				case 10:
					this.using_skill_ids = base.deserialize.read_integer_list ();
					break;
				case 11:
					this.cannon_id_raise_weight = base.deserialize.read_integer ();
					break;
				case 12:
					this.cannon_power = base.deserialize.read_integer ();
					break;
				case 13:
					this.using_cannon_multiple = base.deserialize.read_integer ();
					break;
				case 14:
					this.is_bankruptcy = base.deserialize.read_boolean ();
					break;
				case 15:
					this.items = base.deserialize.read_obj_list<prop> ();
					break;
				case 16:
					this.account_id = base.deserialize.read_integer ();
					break;
				case 17:
					this.free_auto_fire_remain = base.deserialize.read_integer ();
					break;
				case 18:
					this.pay_auto_fire_end = base.deserialize.read_string ();
					break;
				case 19:
					this.small_game_id = base.deserialize.read_integer ();
					break;
				case 20:
					this.machine_storm_cannon = base.deserialize.read_integer ();
					break;
				case 21:
					this.dizzy_time = base.deserialize.read_integer ();
					break;
				case 22:
					this.slow_time = base.deserialize.read_integer ();
					break;
				case 23:
					this.world_boss_rewarding = base.deserialize.read_boolean ();
					break;
				case 24:
					this.icon_box_id = base.deserialize.read_integer ();
					break;
				case 25:
					this.battery_skill_energy = base.deserialize.read_integer ();
					break;
				case 26:
					this.s_battery_skill_energy = base.deserialize.read_string ();
					break;
				case 27:
					this.in_boss_pay_lottery = base.deserialize.read_boolean ();
					break;
				case 28:
					this.room_colored_gold_action = base.deserialize.read_integer ();
					break;
				case 29:
					this.room_colored_gold_state = base.deserialize.read_integer ();
					break;
				case 31:
					this.current_money_border_id = base.deserialize.read_integer ();
					break;
				case 33:
					this.battery_skill = base.deserialize.read_obj<battery_skill> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.uid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.chair_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.gold, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.level, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.gender, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.nickname, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.img_url, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.diamond, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.unlock_battery, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.using_cannon, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.using_skill_ids, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.cannon_id_raise_weight, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.cannon_power, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.using_cannon_multiple, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_boolean (this.is_bankruptcy, 14);
			}

			if (base.has_field.has_field (15)) {
				base.serialize.write_obj (this.items, 15);
			}

			if (base.has_field.has_field (16)) {
				base.serialize.write_integer (this.account_id, 16);
			}

			if (base.has_field.has_field (17)) {
				base.serialize.write_integer (this.free_auto_fire_remain, 17);
			}

			if (base.has_field.has_field (18)) {
				base.serialize.write_string (this.pay_auto_fire_end, 18);
			}

			if (base.has_field.has_field (19)) {
				base.serialize.write_integer (this.small_game_id, 19);
			}

			if (base.has_field.has_field (20)) {
				base.serialize.write_integer (this.machine_storm_cannon, 20);
			}

			if (base.has_field.has_field (21)) {
				base.serialize.write_integer (this.dizzy_time, 21);
			}

			if (base.has_field.has_field (22)) {
				base.serialize.write_integer (this.slow_time, 22);
			}

			if (base.has_field.has_field (23)) {
				base.serialize.write_boolean (this.world_boss_rewarding, 23);
			}

			if (base.has_field.has_field (24)) {
				base.serialize.write_integer (this.icon_box_id, 24);
			}

			if (base.has_field.has_field (25)) {
				base.serialize.write_integer (this.battery_skill_energy, 25);
			}

			if (base.has_field.has_field (26)) {
				base.serialize.write_string (this.s_battery_skill_energy, 26);
			}

			if (base.has_field.has_field (27)) {
				base.serialize.write_boolean (this.in_boss_pay_lottery, 27);
			}

			if (base.has_field.has_field (28)) {
				base.serialize.write_integer (this.room_colored_gold_action, 28);
			}

			if (base.has_field.has_field (29)) {
				base.serialize.write_integer (this.room_colored_gold_state, 29);
			}

			if (base.has_field.has_field (30)) {
				base.serialize.write_integer (this.current_money_border_id, 31);
			}

			if (base.has_field.has_field (31)) {
				base.serialize.write_obj (this.battery_skill, 33);
			}

			return base.serialize.close ();
		}
	}


	public class take_mail_reward {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _guid; // tag 0
			public string guid {
				get { return _guid; }
				set { base.has_field.set_field (0, true); _guid = value; }
			}
			public bool HasGuid {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.guid = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.guid, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 8;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private string _guid; // tag 2
			public string guid {
				get { return _guid; }
				set { base.has_field.set_field (2, true); _guid = value; }
			}
			public bool HasGuid {
				get { return base.has_field.has_field (2); }
			}

			private List<prop> _reward; // tag 3
			public List<prop> reward {
				get { return _reward; }
				set { base.has_field.set_field (3, true); _reward = value; }
			}
			public bool HasReward {
				get { return base.has_field.has_field (3); }
			}

			private string _total_gold; // tag 4
			public string total_gold {
				get { return _total_gold; }
				set { base.has_field.set_field (4, true); _total_gold = value; }
			}
			public bool HasTotal_gold {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _total_diamond; // tag 5
			public Int64 total_diamond {
				get { return _total_diamond; }
				set { base.has_field.set_field (5, true); _total_diamond = value; }
			}
			public bool HasTotal_diamond {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _total_lottery; // tag 6
			public Int64 total_lottery {
				get { return _total_lottery; }
				set { base.has_field.set_field (6, true); _total_lottery = value; }
			}
			public bool HasTotal_lottery {
				get { return base.has_field.has_field (6); }
			}

			private List<Int64> _equip_list_active; // tag 7
			public List<Int64> equip_list_active {
				get { return _equip_list_active; }
				set { base.has_field.set_field (7, true); _equip_list_active = value; }
			}
			public bool HasEquip_list_active {
				get { return base.has_field.has_field (7); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.guid = base.deserialize.read_string ();
						break;
					case 3:
						this.reward = base.deserialize.read_obj_list<prop> ();
						break;
					case 4:
						this.total_gold = base.deserialize.read_string ();
						break;
					case 5:
						this.total_diamond = base.deserialize.read_integer ();
						break;
					case 6:
						this.total_lottery = base.deserialize.read_integer ();
						break;
					case 7:
						this.equip_list_active = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.guid, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.reward, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.total_gold, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.total_diamond, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.total_lottery, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.equip_list_active, 7);
				}

				return base.serialize.close ();
			}
		}


	}


	public class task_info : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _status; // tag 1
		public Int64 status {
			get { return _status; }
			set { base.has_field.set_field (1, true); _status = value; }
		}
		public bool HasStatus {
			get { return base.has_field.has_field (1); }
		}

		private List<reach_cond> _cond_list; // tag 2
		public List<reach_cond> cond_list {
			get { return _cond_list; }
			set { base.has_field.set_field (2, true); _cond_list = value; }
		}
		public bool HasCond_list {
			get { return base.has_field.has_field (2); }
		}

		public task_info () : base(max_field_count) {}

		public task_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.status = base.deserialize.read_integer ();
					break;
				case 2:
					this.cond_list = base.deserialize.read_obj_list<reach_cond> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.status, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_obj (this.cond_list, 2);
			}

			return base.serialize.close ();
		}
	}


	public class tile : SprotoTypeBase {
		private static int max_field_count = 5;
		
		
		private Int64 _index; // tag 0
		public Int64 index {
			get { return _index; }
			set { base.has_field.set_field (0, true); _index = value; }
		}
		public bool HasIndex {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _pos; // tag 1
		public Int64 pos {
			get { return _pos; }
			set { base.has_field.set_field (1, true); _pos = value; }
		}
		public bool HasPos {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _event_type; // tag 2
		public Int64 event_type {
			get { return _event_type; }
			set { base.has_field.set_field (2, true); _event_type = value; }
		}
		public bool HasEvent_type {
			get { return base.has_field.has_field (2); }
		}

		private List<prop> _items; // tag 3
		public List<prop> items {
			get { return _items; }
			set { base.has_field.set_field (3, true); _items = value; }
		}
		public bool HasItems {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _choices; // tag 4
		public Int64 choices {
			get { return _choices; }
			set { base.has_field.set_field (4, true); _choices = value; }
		}
		public bool HasChoices {
			get { return base.has_field.has_field (4); }
		}

		public tile () : base(max_field_count) {}

		public tile (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.index = base.deserialize.read_integer ();
					break;
				case 1:
					this.pos = base.deserialize.read_integer ();
					break;
				case 2:
					this.event_type = base.deserialize.read_integer ();
					break;
				case 3:
					this.items = base.deserialize.read_obj_list<prop> ();
					break;
				case 4:
					this.choices = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.index, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.pos, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.event_type, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_obj (this.items, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.choices, 4);
			}

			return base.serialize.close ();
		}
	}


	public class use_prop {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 8;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _quantity; // tag 1
			public Int64 quantity {
				get { return _quantity; }
				set { base.has_field.set_field (1, true); _quantity = value; }
			}
			public bool HasQuantity {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _buy; // tag 2
			public Int64 buy {
				get { return _buy; }
				set { base.has_field.set_field (2, true); _buy = value; }
			}
			public bool HasBuy {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _test; // tag 3
			public Int64 test {
				get { return _test; }
				set { base.has_field.set_field (3, true); _test = value; }
			}
			public bool HasTest {
				get { return base.has_field.has_field (3); }
			}

			private express_info_item _express_info; // tag 4
			public express_info_item express_info {
				get { return _express_info; }
				set { base.has_field.set_field (4, true); _express_info = value; }
			}
			public bool HasExpress_info {
				get { return base.has_field.has_field (4); }
			}

			private List<Int64> _tag_list; // tag 5
			public List<Int64> tag_list {
				get { return _tag_list; }
				set { base.has_field.set_field (5, true); _tag_list = value; }
			}
			public bool HasTag_list {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _charge_type; // tag 6
			public Int64 charge_type {
				get { return _charge_type; }
				set { base.has_field.set_field (6, true); _charge_type = value; }
			}
			public bool HasCharge_type {
				get { return base.has_field.has_field (6); }
			}

			private string _phone_number; // tag 7
			public string phone_number {
				get { return _phone_number; }
				set { base.has_field.set_field (7, true); _phone_number = value; }
			}
			public bool HasPhone_number {
				get { return base.has_field.has_field (7); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					case 1:
						this.quantity = base.deserialize.read_integer ();
						break;
					case 2:
						this.buy = base.deserialize.read_integer ();
						break;
					case 3:
						this.test = base.deserialize.read_integer ();
						break;
					case 4:
						this.express_info = base.deserialize.read_obj<express_info_item> ();
						break;
					case 5:
						this.tag_list = base.deserialize.read_integer_list ();
						break;
					case 6:
						this.charge_type = base.deserialize.read_integer ();
						break;
					case 7:
						this.phone_number = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.quantity, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.buy, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.test, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_obj (this.express_info, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.tag_list, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.charge_type, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_string (this.phone_number, 7);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _error_code; // tag 0
			public Int64 error_code {
				get { return _error_code; }
				set { base.has_field.set_field (0, true); _error_code = value; }
			}
			public bool HasError_code {
				get { return base.has_field.has_field (0); }
			}

			private string _error_msg; // tag 1
			public string error_msg {
				get { return _error_msg; }
				set { base.has_field.set_field (1, true); _error_msg = value; }
			}
			public bool HasError_msg {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _props; // tag 2
			public List<prop> props {
				get { return _props; }
				set { base.has_field.set_field (2, true); _props = value; }
			}
			public bool HasProps {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.error_code = base.deserialize.read_integer ();
						break;
					case 1:
						this.error_msg = base.deserialize.read_string ();
						break;
					case 2:
						this.props = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.error_code, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.error_msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.props, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class victim : SprotoTypeBase {
		private static int max_field_count = 17;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _tag_id; // tag 1
		public Int64 tag_id {
			get { return _tag_id; }
			set { base.has_field.set_field (1, true); _tag_id = value; }
		}
		public bool HasTag_id {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _score; // tag 2
		public Int64 score {
			get { return _score; }
			set { base.has_field.set_field (2, true); _score = value; }
		}
		public bool HasScore {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _func_id; // tag 3
		public Int64 func_id {
			get { return _func_id; }
			set { base.has_field.set_field (3, true); _func_id = value; }
		}
		public bool HasFunc_id {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _net_id; // tag 4
		public Int64 net_id {
			get { return _net_id; }
			set { base.has_field.set_field (4, true); _net_id = value; }
		}
		public bool HasNet_id {
			get { return base.has_field.has_field (4); }
		}

		private List<prop> _items; // tag 5
		public List<prop> items {
			get { return _items; }
			set { base.has_field.set_field (5, true); _items = value; }
		}
		public bool HasItems {
			get { return base.has_field.has_field (5); }
		}

		private List<Int64> _factor_list; // tag 6
		public List<Int64> factor_list {
			get { return _factor_list; }
			set { base.has_field.set_field (6, true); _factor_list = value; }
		}
		public bool HasFactor_list {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _func_param; // tag 7
		public Int64 func_param {
			get { return _func_param; }
			set { base.has_field.set_field (7, true); _func_param = value; }
		}
		public bool HasFunc_param {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _slots_score; // tag 8
		public Int64 slots_score {
			get { return _slots_score; }
			set { base.has_field.set_field (8, true); _slots_score = value; }
		}
		public bool HasSlots_score {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _crit_gold; // tag 9
		public Int64 crit_gold {
			get { return _crit_gold; }
			set { base.has_field.set_field (9, true); _crit_gold = value; }
		}
		public bool HasCrit_gold {
			get { return base.has_field.has_field (9); }
		}

		private List<prop> _must_show; // tag 10
		public List<prop> must_show {
			get { return _must_show; }
			set { base.has_field.set_field (10, true); _must_show = value; }
		}
		public bool HasMust_show {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _must_show_num; // tag 11
		public Int64 must_show_num {
			get { return _must_show_num; }
			set { base.has_field.set_field (11, true); _must_show_num = value; }
		}
		public bool HasMust_show_num {
			get { return base.has_field.has_field (11); }
		}

		private List<prop> _choose_show; // tag 12
		public List<prop> choose_show {
			get { return _choose_show; }
			set { base.has_field.set_field (12, true); _choose_show = value; }
		}
		public bool HasChoose_show {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _reward_level; // tag 13
		public Int64 reward_level {
			get { return _reward_level; }
			set { base.has_field.set_field (13, true); _reward_level = value; }
		}
		public bool HasReward_level {
			get { return base.has_field.has_field (13); }
		}

		private List<prop> _boss_lucky; // tag 14
		public List<prop> boss_lucky {
			get { return _boss_lucky; }
			set { base.has_field.set_field (14, true); _boss_lucky = value; }
		}
		public bool HasBoss_lucky {
			get { return base.has_field.has_field (14); }
		}

		private Int64 _draw_count_B_one_kill; // tag 15
		public Int64 draw_count_B_one_kill {
			get { return _draw_count_B_one_kill; }
			set { base.has_field.set_field (15, true); _draw_count_B_one_kill = value; }
		}
		public bool HasDraw_count_B_one_kill {
			get { return base.has_field.has_field (15); }
		}

		private Int64 _special_fish_status; // tag 16
		public Int64 special_fish_status {
			get { return _special_fish_status; }
			set { base.has_field.set_field (16, true); _special_fish_status = value; }
		}
		public bool HasSpecial_fish_status {
			get { return base.has_field.has_field (16); }
		}

		public victim () : base(max_field_count) {}

		public victim (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.tag_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.score = base.deserialize.read_integer ();
					break;
				case 3:
					this.func_id = base.deserialize.read_integer ();
					break;
				case 4:
					this.net_id = base.deserialize.read_integer ();
					break;
				case 5:
					this.items = base.deserialize.read_obj_list<prop> ();
					break;
				case 6:
					this.factor_list = base.deserialize.read_integer_list ();
					break;
				case 7:
					this.func_param = base.deserialize.read_integer ();
					break;
				case 8:
					this.slots_score = base.deserialize.read_integer ();
					break;
				case 9:
					this.crit_gold = base.deserialize.read_integer ();
					break;
				case 10:
					this.must_show = base.deserialize.read_obj_list<prop> ();
					break;
				case 11:
					this.must_show_num = base.deserialize.read_integer ();
					break;
				case 12:
					this.choose_show = base.deserialize.read_obj_list<prop> ();
					break;
				case 13:
					this.reward_level = base.deserialize.read_integer ();
					break;
				case 14:
					this.boss_lucky = base.deserialize.read_obj_list<prop> ();
					break;
				case 15:
					this.draw_count_B_one_kill = base.deserialize.read_integer ();
					break;
				case 16:
					this.special_fish_status = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.tag_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.score, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.func_id, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.net_id, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_obj (this.items, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.factor_list, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.func_param, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.slots_score, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.crit_gold, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_obj (this.must_show, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.must_show_num, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_obj (this.choose_show, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.reward_level, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_obj (this.boss_lucky, 14);
			}

			if (base.has_field.has_field (15)) {
				base.serialize.write_integer (this.draw_count_B_one_kill, 15);
			}

			if (base.has_field.has_field (16)) {
				base.serialize.write_integer (this.special_fish_status, 16);
			}

			return base.serialize.close ();
		}
	}


}


public class ClientProtocol : ProtocolBase {
	public static  ClientProtocol Instance = new ClientProtocol();
	private ClientProtocol() {
		Protocol.SetProtocol<delete_mail> (delete_mail.Tag);
		Protocol.SetRequest<ClientSprotoType.delete_mail.request> (delete_mail.Tag);
		Protocol.SetResponse<ClientSprotoType.delete_mail.response> (delete_mail.Tag);

		Protocol.SetProtocol<fire> (fire.Tag);
		Protocol.SetRequest<ClientSprotoType.fire.request> (fire.Tag);

		Protocol.SetProtocol<get> (get.Tag);
		Protocol.SetRequest<ClientSprotoType.get.request> (get.Tag);
		Protocol.SetResponse<ClientSprotoType.get.response> (get.Tag);

		Protocol.SetProtocol<get_mail_list> (get_mail_list.Tag);
		Protocol.SetRequest<ClientSprotoType.get_mail_list.request> (get_mail_list.Tag);
		Protocol.SetResponse<ClientSprotoType.get_mail_list.response> (get_mail_list.Tag);

		Protocol.SetProtocol<get_redpoint> (get_redpoint.Tag);
		Protocol.SetRequest<ClientSprotoType.get_redpoint.request> (get_redpoint.Tag);
		Protocol.SetResponse<ClientSprotoType.get_redpoint.response> (get_redpoint.Tag);

		Protocol.SetProtocol<heartbeat> (heartbeat.Tag);
		Protocol.SetRequest<ClientSprotoType.heartbeat.request> (heartbeat.Tag);
		Protocol.SetResponse<ClientSprotoType.heartbeat.response> (heartbeat.Tag);

		Protocol.SetProtocol<login> (login.Tag);
		Protocol.SetRequest<ClientSprotoType.login.request> (login.Tag);
		Protocol.SetResponse<ClientSprotoType.login.response> (login.Tag);

		Protocol.SetProtocol<open_mail> (open_mail.Tag);
		Protocol.SetRequest<ClientSprotoType.open_mail.request> (open_mail.Tag);
		Protocol.SetResponse<ClientSprotoType.open_mail.response> (open_mail.Tag);

		Protocol.SetProtocol<quick_sign_up> (quick_sign_up.Tag);
		Protocol.SetRequest<ClientSprotoType.quick_sign_up.request> (quick_sign_up.Tag);
		Protocol.SetResponse<ClientSprotoType.quick_sign_up.response> (quick_sign_up.Tag);

		Protocol.SetProtocol<req_backpack_data> (req_backpack_data.Tag);
		Protocol.SetResponse<ClientSprotoType.req_backpack_data.response> (req_backpack_data.Tag);

		Protocol.SetProtocol<req_jump_room_id> (req_jump_room_id.Tag);
		Protocol.SetRequest<ClientSprotoType.req_jump_room_id.request> (req_jump_room_id.Tag);
		Protocol.SetResponse<ClientSprotoType.req_jump_room_id.response> (req_jump_room_id.Tag);

		Protocol.SetProtocol<req_monopoly_dice> (req_monopoly_dice.Tag);
		Protocol.SetRequest<ClientSprotoType.req_monopoly_dice.request> (req_monopoly_dice.Tag);
		Protocol.SetResponse<ClientSprotoType.req_monopoly_dice.response> (req_monopoly_dice.Tag);

		Protocol.SetProtocol<req_open_backpack> (req_open_backpack.Tag);
		Protocol.SetRequest<ClientSprotoType.req_open_backpack.request> (req_open_backpack.Tag);

		Protocol.SetProtocol<req_room_info> (req_room_info.Tag);
		Protocol.SetRequest<ClientSprotoType.req_room_info.request> (req_room_info.Tag);
		Protocol.SetResponse<ClientSprotoType.req_room_info.response> (req_room_info.Tag);

		Protocol.SetProtocol<req_room_list> (req_room_list.Tag);
		Protocol.SetRequest<ClientSprotoType.req_room_list.request> (req_room_list.Tag);
		Protocol.SetResponse<ClientSprotoType.req_room_list.response> (req_room_list.Tag);

		Protocol.SetProtocol<req_small_game_end> (req_small_game_end.Tag);
		Protocol.SetRequest<ClientSprotoType.req_small_game_end.request> (req_small_game_end.Tag);
		Protocol.SetResponse<ClientSprotoType.req_small_game_end.response> (req_small_game_end.Tag);

		Protocol.SetProtocol<req_small_game_start> (req_small_game_start.Tag);
		Protocol.SetRequest<ClientSprotoType.req_small_game_start.request> (req_small_game_start.Tag);
		Protocol.SetResponse<ClientSprotoType.req_small_game_start.response> (req_small_game_start.Tag);

		Protocol.SetProtocol<req_task_list> (req_task_list.Tag);
		Protocol.SetRequest<ClientSprotoType.req_task_list.request> (req_task_list.Tag);
		Protocol.SetResponse<ClientSprotoType.req_task_list.response> (req_task_list.Tag);

		Protocol.SetProtocol<req_task_reward> (req_task_reward.Tag);
		Protocol.SetRequest<ClientSprotoType.req_task_reward.request> (req_task_reward.Tag);
		Protocol.SetResponse<ClientSprotoType.req_task_reward.response> (req_task_reward.Tag);

		Protocol.SetProtocol<req_tb_cfg> (req_tb_cfg.Tag);
		Protocol.SetRequest<ClientSprotoType.req_tb_cfg.request> (req_tb_cfg.Tag);
		Protocol.SetResponse<ClientSprotoType.req_tb_cfg.response> (req_tb_cfg.Tag);

		Protocol.SetProtocol<room_quit> (room_quit.Tag);
		Protocol.SetRequest<ClientSprotoType.room_quit.request> (room_quit.Tag);
		Protocol.SetResponse<ClientSprotoType.room_quit.response> (room_quit.Tag);

		Protocol.SetProtocol<room_sign_up> (room_sign_up.Tag);
		Protocol.SetRequest<ClientSprotoType.room_sign_up.request> (room_sign_up.Tag);
		Protocol.SetResponse<ClientSprotoType.room_sign_up.response> (room_sign_up.Tag);

		Protocol.SetProtocol<sync_user_info> (sync_user_info.Tag);
		Protocol.SetRequest<ClientSprotoType.sync_user_info.request> (sync_user_info.Tag);
		Protocol.SetResponse<ClientSprotoType.sync_user_info.response> (sync_user_info.Tag);

		Protocol.SetProtocol<take_mail_reward> (take_mail_reward.Tag);
		Protocol.SetRequest<ClientSprotoType.take_mail_reward.request> (take_mail_reward.Tag);
		Protocol.SetResponse<ClientSprotoType.take_mail_reward.response> (take_mail_reward.Tag);

		Protocol.SetProtocol<use_prop> (use_prop.Tag);
		Protocol.SetRequest<ClientSprotoType.use_prop.request> (use_prop.Tag);
		Protocol.SetResponse<ClientSprotoType.use_prop.response> (use_prop.Tag);

	}

	public class delete_mail {
		public const int Tag = 131;
	}

	public class fire {
		public const int Tag = 112;
	}

	public class get {
		public const int Tag = 2;
	}

	public class get_mail_list {
		public const int Tag = 127;
	}

	public class get_redpoint {
		public const int Tag = 151;
	}

	public class heartbeat {
		public const int Tag = 3;
	}

	public class login {
		public const int Tag = 100;
	}

	public class open_mail {
		public const int Tag = 128;
	}

	public class quick_sign_up {
		public const int Tag = 136;
	}

	public class req_backpack_data {
		public const int Tag = 106;
	}

	public class req_jump_room_id {
		public const int Tag = 309;
	}

	public class req_monopoly_dice {
		public const int Tag = 222;
	}

	public class req_open_backpack {
		public const int Tag = 175;
	}

	public class req_room_info {
		public const int Tag = 172;
	}

	public class req_room_list {
		public const int Tag = 101;
	}

	public class req_small_game_end {
		public const int Tag = 215;
	}

	public class req_small_game_start {
		public const int Tag = 214;
	}

	public class req_task_list {
		public const int Tag = 104;
	}

	public class req_task_reward {
		public const int Tag = 105;
	}

	public class req_tb_cfg {
		public const int Tag = 268;
	}

	public class room_quit {
		public const int Tag = 103;
	}

	public class room_sign_up {
		public const int Tag = 102;
	}

	public class sync_user_info {
		public const int Tag = 208;
	}

	public class take_mail_reward {
		public const int Tag = 129;
	}

	public class use_prop {
		public const int Tag = 107;
	}

}